Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMA
    EITHER
    EQ
    FUNCTION
    GT
    GTE
    HAVING
    LBRACE
    LT
    LTE
    NEQ
    OR
    RBRACE
    RETURN
    TYPE
    VAR

Grammar

Rule 0     S' -> program
Rule 1     program -> declaration_list
Rule 2     newline_statement -> NEWLINE
Rule 3     newline_statement -> newline_statement NEWLINE
Rule 4     declaration_list -> declaration_list declaration
Rule 5     declaration_list -> declaration
Rule 6     declaration -> variable_declaration
Rule 7     declaration -> statement
Rule 8     variable_declaration -> type COLON IDENTIFIER EQUALS expression SEMICOLON
Rule 9     statement -> read_statement
Rule 10    statement -> print_statement
Rule 11    statement -> for_statement
Rule 12    statement -> newline_statement
Rule 13    print_statement -> SHOW expression SEMICOLON
Rule 14    read_statement -> GET type COLON IDENTIFIER BY expression SEMICOLON
Rule 15    for_statement -> FOR IDENTIFIER IN RANGE expression DO NEWLINE declaration_list END
Rule 16    expression -> expression PLUS term
Rule 17    expression -> expression MINUS term
Rule 18    expression -> term
Rule 19    term -> term TIMES factor
Rule 20    term -> term DIVIDE factor
Rule 21    term -> term MOD factor
Rule 22    term -> factor
Rule 23    factor -> NUMBER
Rule 24    factor -> FLOAT
Rule 25    factor -> CHARCONST
Rule 26    factor -> LPAREN expression RPAREN
Rule 27    factor -> designator
Rule 28    designator -> IDENTIFIER
Rule 29    designator -> designator DOT IDENTIFIER
Rule 30    type -> INT
Rule 31    type -> BOOLEAN
Rule 32    type -> TEXT
Rule 33    type -> FLOAT
Rule 34    expression -> NULL

Terminals, with rules where they appear

BOOLEAN              : 31
BY                   : 14
CHARCONST            : 25
COLON                : 8 14
COMMA                : 
DIVIDE               : 20
DO                   : 15
DOT                  : 29
EITHER               : 
END                  : 15
EQ                   : 
EQUALS               : 8
FLOAT                : 24 33
FOR                  : 15
FUNCTION             : 
GET                  : 14
GT                   : 
GTE                  : 
HAVING               : 
IDENTIFIER           : 8 14 15 28 29
IN                   : 15
INT                  : 30
LBRACE               : 
LPAREN               : 26
LT                   : 
LTE                  : 
MINUS                : 17
MOD                  : 21
NEQ                  : 
NEWLINE              : 2 3 15
NULL                 : 34
NUMBER               : 23
OR                   : 
PLUS                 : 16
RANGE                : 15
RBRACE               : 
RETURN               : 
RPAREN               : 26
SEMICOLON            : 8 13 14
SHOW                 : 13
TEXT                 : 32
TIMES                : 19
TYPE                 : 
VAR                  : 
error                : 

Nonterminals, with rules where they appear

declaration          : 4 5
declaration_list     : 1 4 15
designator           : 27 29
expression           : 8 13 14 15 16 17 26
factor               : 19 20 21 22
for_statement        : 11
newline_statement    : 3 12
print_statement      : 10
program              : 0
read_statement       : 9
statement            : 7
term                 : 16 17 18 19 20 21
type                 : 8 14
variable_declaration : 6

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . declaration_list
    (4) declaration_list -> . declaration_list declaration
    (5) declaration_list -> . declaration
    (6) declaration -> . variable_declaration
    (7) declaration -> . statement
    (8) variable_declaration -> . type COLON IDENTIFIER EQUALS expression SEMICOLON
    (9) statement -> . read_statement
    (10) statement -> . print_statement
    (11) statement -> . for_statement
    (12) statement -> . newline_statement
    (30) type -> . INT
    (31) type -> . BOOLEAN
    (32) type -> . TEXT
    (33) type -> . FLOAT
    (14) read_statement -> . GET type COLON IDENTIFIER BY expression SEMICOLON
    (13) print_statement -> . SHOW expression SEMICOLON
    (15) for_statement -> . FOR IDENTIFIER IN RANGE expression DO NEWLINE declaration_list END
    (2) newline_statement -> . NEWLINE
    (3) newline_statement -> . newline_statement NEWLINE

    INT             shift and go to state 11
    BOOLEAN         shift and go to state 12
    TEXT            shift and go to state 13
    FLOAT           shift and go to state 14
    GET             shift and go to state 15
    SHOW            shift and go to state 16
    FOR             shift and go to state 17
    NEWLINE         shift and go to state 18

    program                        shift and go to state 1
    declaration_list               shift and go to state 2
    declaration                    shift and go to state 3
    variable_declaration           shift and go to state 4
    statement                      shift and go to state 5
    type                           shift and go to state 6
    read_statement                 shift and go to state 7
    print_statement                shift and go to state 8
    for_statement                  shift and go to state 9
    newline_statement              shift and go to state 10

state 1

    (0) S' -> program .



state 2

    (1) program -> declaration_list .
    (4) declaration_list -> declaration_list . declaration
    (6) declaration -> . variable_declaration
    (7) declaration -> . statement
    (8) variable_declaration -> . type COLON IDENTIFIER EQUALS expression SEMICOLON
    (9) statement -> . read_statement
    (10) statement -> . print_statement
    (11) statement -> . for_statement
    (12) statement -> . newline_statement
    (30) type -> . INT
    (31) type -> . BOOLEAN
    (32) type -> . TEXT
    (33) type -> . FLOAT
    (14) read_statement -> . GET type COLON IDENTIFIER BY expression SEMICOLON
    (13) print_statement -> . SHOW expression SEMICOLON
    (15) for_statement -> . FOR IDENTIFIER IN RANGE expression DO NEWLINE declaration_list END
    (2) newline_statement -> . NEWLINE
    (3) newline_statement -> . newline_statement NEWLINE

    $end            reduce using rule 1 (program -> declaration_list .)
    INT             shift and go to state 11
    BOOLEAN         shift and go to state 12
    TEXT            shift and go to state 13
    FLOAT           shift and go to state 14
    GET             shift and go to state 15
    SHOW            shift and go to state 16
    FOR             shift and go to state 17
    NEWLINE         shift and go to state 18

    declaration                    shift and go to state 19
    variable_declaration           shift and go to state 4
    statement                      shift and go to state 5
    type                           shift and go to state 6
    read_statement                 shift and go to state 7
    print_statement                shift and go to state 8
    for_statement                  shift and go to state 9
    newline_statement              shift and go to state 10

state 3

    (5) declaration_list -> declaration .

    INT             reduce using rule 5 (declaration_list -> declaration .)
    BOOLEAN         reduce using rule 5 (declaration_list -> declaration .)
    TEXT            reduce using rule 5 (declaration_list -> declaration .)
    FLOAT           reduce using rule 5 (declaration_list -> declaration .)
    GET             reduce using rule 5 (declaration_list -> declaration .)
    SHOW            reduce using rule 5 (declaration_list -> declaration .)
    FOR             reduce using rule 5 (declaration_list -> declaration .)
    NEWLINE         reduce using rule 5 (declaration_list -> declaration .)
    $end            reduce using rule 5 (declaration_list -> declaration .)
    END             reduce using rule 5 (declaration_list -> declaration .)


state 4

    (6) declaration -> variable_declaration .

    INT             reduce using rule 6 (declaration -> variable_declaration .)
    BOOLEAN         reduce using rule 6 (declaration -> variable_declaration .)
    TEXT            reduce using rule 6 (declaration -> variable_declaration .)
    FLOAT           reduce using rule 6 (declaration -> variable_declaration .)
    GET             reduce using rule 6 (declaration -> variable_declaration .)
    SHOW            reduce using rule 6 (declaration -> variable_declaration .)
    FOR             reduce using rule 6 (declaration -> variable_declaration .)
    NEWLINE         reduce using rule 6 (declaration -> variable_declaration .)
    $end            reduce using rule 6 (declaration -> variable_declaration .)
    END             reduce using rule 6 (declaration -> variable_declaration .)


state 5

    (7) declaration -> statement .

    INT             reduce using rule 7 (declaration -> statement .)
    BOOLEAN         reduce using rule 7 (declaration -> statement .)
    TEXT            reduce using rule 7 (declaration -> statement .)
    FLOAT           reduce using rule 7 (declaration -> statement .)
    GET             reduce using rule 7 (declaration -> statement .)
    SHOW            reduce using rule 7 (declaration -> statement .)
    FOR             reduce using rule 7 (declaration -> statement .)
    NEWLINE         reduce using rule 7 (declaration -> statement .)
    $end            reduce using rule 7 (declaration -> statement .)
    END             reduce using rule 7 (declaration -> statement .)


state 6

    (8) variable_declaration -> type . COLON IDENTIFIER EQUALS expression SEMICOLON

    COLON           shift and go to state 20


state 7

    (9) statement -> read_statement .

    INT             reduce using rule 9 (statement -> read_statement .)
    BOOLEAN         reduce using rule 9 (statement -> read_statement .)
    TEXT            reduce using rule 9 (statement -> read_statement .)
    FLOAT           reduce using rule 9 (statement -> read_statement .)
    GET             reduce using rule 9 (statement -> read_statement .)
    SHOW            reduce using rule 9 (statement -> read_statement .)
    FOR             reduce using rule 9 (statement -> read_statement .)
    NEWLINE         reduce using rule 9 (statement -> read_statement .)
    $end            reduce using rule 9 (statement -> read_statement .)
    END             reduce using rule 9 (statement -> read_statement .)


state 8

    (10) statement -> print_statement .

    INT             reduce using rule 10 (statement -> print_statement .)
    BOOLEAN         reduce using rule 10 (statement -> print_statement .)
    TEXT            reduce using rule 10 (statement -> print_statement .)
    FLOAT           reduce using rule 10 (statement -> print_statement .)
    GET             reduce using rule 10 (statement -> print_statement .)
    SHOW            reduce using rule 10 (statement -> print_statement .)
    FOR             reduce using rule 10 (statement -> print_statement .)
    NEWLINE         reduce using rule 10 (statement -> print_statement .)
    $end            reduce using rule 10 (statement -> print_statement .)
    END             reduce using rule 10 (statement -> print_statement .)


state 9

    (11) statement -> for_statement .

    INT             reduce using rule 11 (statement -> for_statement .)
    BOOLEAN         reduce using rule 11 (statement -> for_statement .)
    TEXT            reduce using rule 11 (statement -> for_statement .)
    FLOAT           reduce using rule 11 (statement -> for_statement .)
    GET             reduce using rule 11 (statement -> for_statement .)
    SHOW            reduce using rule 11 (statement -> for_statement .)
    FOR             reduce using rule 11 (statement -> for_statement .)
    NEWLINE         reduce using rule 11 (statement -> for_statement .)
    $end            reduce using rule 11 (statement -> for_statement .)
    END             reduce using rule 11 (statement -> for_statement .)


state 10

    (12) statement -> newline_statement .
    (3) newline_statement -> newline_statement . NEWLINE

  ! shift/reduce conflict for NEWLINE resolved as shift
    INT             reduce using rule 12 (statement -> newline_statement .)
    BOOLEAN         reduce using rule 12 (statement -> newline_statement .)
    TEXT            reduce using rule 12 (statement -> newline_statement .)
    FLOAT           reduce using rule 12 (statement -> newline_statement .)
    GET             reduce using rule 12 (statement -> newline_statement .)
    SHOW            reduce using rule 12 (statement -> newline_statement .)
    FOR             reduce using rule 12 (statement -> newline_statement .)
    $end            reduce using rule 12 (statement -> newline_statement .)
    END             reduce using rule 12 (statement -> newline_statement .)
    NEWLINE         shift and go to state 21

  ! NEWLINE         [ reduce using rule 12 (statement -> newline_statement .) ]


state 11

    (30) type -> INT .

    COLON           reduce using rule 30 (type -> INT .)


state 12

    (31) type -> BOOLEAN .

    COLON           reduce using rule 31 (type -> BOOLEAN .)


state 13

    (32) type -> TEXT .

    COLON           reduce using rule 32 (type -> TEXT .)


state 14

    (33) type -> FLOAT .

    COLON           reduce using rule 33 (type -> FLOAT .)


state 15

    (14) read_statement -> GET . type COLON IDENTIFIER BY expression SEMICOLON
    (30) type -> . INT
    (31) type -> . BOOLEAN
    (32) type -> . TEXT
    (33) type -> . FLOAT

    INT             shift and go to state 11
    BOOLEAN         shift and go to state 12
    TEXT            shift and go to state 13
    FLOAT           shift and go to state 14

    type                           shift and go to state 22

state 16

    (13) print_statement -> SHOW . expression SEMICOLON
    (16) expression -> . expression PLUS term
    (17) expression -> . expression MINUS term
    (18) expression -> . term
    (34) expression -> . NULL
    (19) term -> . term TIMES factor
    (20) term -> . term DIVIDE factor
    (21) term -> . term MOD factor
    (22) term -> . factor
    (23) factor -> . NUMBER
    (24) factor -> . FLOAT
    (25) factor -> . CHARCONST
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . designator
    (28) designator -> . IDENTIFIER
    (29) designator -> . designator DOT IDENTIFIER

    NULL            shift and go to state 25
    NUMBER          shift and go to state 27
    FLOAT           shift and go to state 28
    CHARCONST       shift and go to state 29
    LPAREN          shift and go to state 30
    IDENTIFIER      shift and go to state 32

    expression                     shift and go to state 23
    term                           shift and go to state 24
    factor                         shift and go to state 26
    designator                     shift and go to state 31

state 17

    (15) for_statement -> FOR . IDENTIFIER IN RANGE expression DO NEWLINE declaration_list END

    IDENTIFIER      shift and go to state 33


state 18

    (2) newline_statement -> NEWLINE .

    NEWLINE         reduce using rule 2 (newline_statement -> NEWLINE .)
    INT             reduce using rule 2 (newline_statement -> NEWLINE .)
    BOOLEAN         reduce using rule 2 (newline_statement -> NEWLINE .)
    TEXT            reduce using rule 2 (newline_statement -> NEWLINE .)
    FLOAT           reduce using rule 2 (newline_statement -> NEWLINE .)
    GET             reduce using rule 2 (newline_statement -> NEWLINE .)
    SHOW            reduce using rule 2 (newline_statement -> NEWLINE .)
    FOR             reduce using rule 2 (newline_statement -> NEWLINE .)
    $end            reduce using rule 2 (newline_statement -> NEWLINE .)
    END             reduce using rule 2 (newline_statement -> NEWLINE .)


state 19

    (4) declaration_list -> declaration_list declaration .

    INT             reduce using rule 4 (declaration_list -> declaration_list declaration .)
    BOOLEAN         reduce using rule 4 (declaration_list -> declaration_list declaration .)
    TEXT            reduce using rule 4 (declaration_list -> declaration_list declaration .)
    FLOAT           reduce using rule 4 (declaration_list -> declaration_list declaration .)
    GET             reduce using rule 4 (declaration_list -> declaration_list declaration .)
    SHOW            reduce using rule 4 (declaration_list -> declaration_list declaration .)
    FOR             reduce using rule 4 (declaration_list -> declaration_list declaration .)
    NEWLINE         reduce using rule 4 (declaration_list -> declaration_list declaration .)
    $end            reduce using rule 4 (declaration_list -> declaration_list declaration .)
    END             reduce using rule 4 (declaration_list -> declaration_list declaration .)


state 20

    (8) variable_declaration -> type COLON . IDENTIFIER EQUALS expression SEMICOLON

    IDENTIFIER      shift and go to state 34


state 21

    (3) newline_statement -> newline_statement NEWLINE .

    NEWLINE         reduce using rule 3 (newline_statement -> newline_statement NEWLINE .)
    INT             reduce using rule 3 (newline_statement -> newline_statement NEWLINE .)
    BOOLEAN         reduce using rule 3 (newline_statement -> newline_statement NEWLINE .)
    TEXT            reduce using rule 3 (newline_statement -> newline_statement NEWLINE .)
    FLOAT           reduce using rule 3 (newline_statement -> newline_statement NEWLINE .)
    GET             reduce using rule 3 (newline_statement -> newline_statement NEWLINE .)
    SHOW            reduce using rule 3 (newline_statement -> newline_statement NEWLINE .)
    FOR             reduce using rule 3 (newline_statement -> newline_statement NEWLINE .)
    $end            reduce using rule 3 (newline_statement -> newline_statement NEWLINE .)
    END             reduce using rule 3 (newline_statement -> newline_statement NEWLINE .)


state 22

    (14) read_statement -> GET type . COLON IDENTIFIER BY expression SEMICOLON

    COLON           shift and go to state 35


state 23

    (13) print_statement -> SHOW expression . SEMICOLON
    (16) expression -> expression . PLUS term
    (17) expression -> expression . MINUS term

    SEMICOLON       shift and go to state 36
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38


state 24

    (18) expression -> term .
    (19) term -> term . TIMES factor
    (20) term -> term . DIVIDE factor
    (21) term -> term . MOD factor

    SEMICOLON       reduce using rule 18 (expression -> term .)
    PLUS            reduce using rule 18 (expression -> term .)
    MINUS           reduce using rule 18 (expression -> term .)
    RPAREN          reduce using rule 18 (expression -> term .)
    DO              reduce using rule 18 (expression -> term .)
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40
    MOD             shift and go to state 41


state 25

    (34) expression -> NULL .

    SEMICOLON       reduce using rule 34 (expression -> NULL .)
    PLUS            reduce using rule 34 (expression -> NULL .)
    MINUS           reduce using rule 34 (expression -> NULL .)
    RPAREN          reduce using rule 34 (expression -> NULL .)
    DO              reduce using rule 34 (expression -> NULL .)


state 26

    (22) term -> factor .

    TIMES           reduce using rule 22 (term -> factor .)
    DIVIDE          reduce using rule 22 (term -> factor .)
    MOD             reduce using rule 22 (term -> factor .)
    SEMICOLON       reduce using rule 22 (term -> factor .)
    PLUS            reduce using rule 22 (term -> factor .)
    MINUS           reduce using rule 22 (term -> factor .)
    RPAREN          reduce using rule 22 (term -> factor .)
    DO              reduce using rule 22 (term -> factor .)


state 27

    (23) factor -> NUMBER .

    TIMES           reduce using rule 23 (factor -> NUMBER .)
    DIVIDE          reduce using rule 23 (factor -> NUMBER .)
    MOD             reduce using rule 23 (factor -> NUMBER .)
    SEMICOLON       reduce using rule 23 (factor -> NUMBER .)
    PLUS            reduce using rule 23 (factor -> NUMBER .)
    MINUS           reduce using rule 23 (factor -> NUMBER .)
    RPAREN          reduce using rule 23 (factor -> NUMBER .)
    DO              reduce using rule 23 (factor -> NUMBER .)


state 28

    (24) factor -> FLOAT .

    TIMES           reduce using rule 24 (factor -> FLOAT .)
    DIVIDE          reduce using rule 24 (factor -> FLOAT .)
    MOD             reduce using rule 24 (factor -> FLOAT .)
    SEMICOLON       reduce using rule 24 (factor -> FLOAT .)
    PLUS            reduce using rule 24 (factor -> FLOAT .)
    MINUS           reduce using rule 24 (factor -> FLOAT .)
    RPAREN          reduce using rule 24 (factor -> FLOAT .)
    DO              reduce using rule 24 (factor -> FLOAT .)


state 29

    (25) factor -> CHARCONST .

    TIMES           reduce using rule 25 (factor -> CHARCONST .)
    DIVIDE          reduce using rule 25 (factor -> CHARCONST .)
    MOD             reduce using rule 25 (factor -> CHARCONST .)
    SEMICOLON       reduce using rule 25 (factor -> CHARCONST .)
    PLUS            reduce using rule 25 (factor -> CHARCONST .)
    MINUS           reduce using rule 25 (factor -> CHARCONST .)
    RPAREN          reduce using rule 25 (factor -> CHARCONST .)
    DO              reduce using rule 25 (factor -> CHARCONST .)


state 30

    (26) factor -> LPAREN . expression RPAREN
    (16) expression -> . expression PLUS term
    (17) expression -> . expression MINUS term
    (18) expression -> . term
    (34) expression -> . NULL
    (19) term -> . term TIMES factor
    (20) term -> . term DIVIDE factor
    (21) term -> . term MOD factor
    (22) term -> . factor
    (23) factor -> . NUMBER
    (24) factor -> . FLOAT
    (25) factor -> . CHARCONST
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . designator
    (28) designator -> . IDENTIFIER
    (29) designator -> . designator DOT IDENTIFIER

    NULL            shift and go to state 25
    NUMBER          shift and go to state 27
    FLOAT           shift and go to state 28
    CHARCONST       shift and go to state 29
    LPAREN          shift and go to state 30
    IDENTIFIER      shift and go to state 32

    expression                     shift and go to state 42
    term                           shift and go to state 24
    factor                         shift and go to state 26
    designator                     shift and go to state 31

state 31

    (27) factor -> designator .
    (29) designator -> designator . DOT IDENTIFIER

    TIMES           reduce using rule 27 (factor -> designator .)
    DIVIDE          reduce using rule 27 (factor -> designator .)
    MOD             reduce using rule 27 (factor -> designator .)
    SEMICOLON       reduce using rule 27 (factor -> designator .)
    PLUS            reduce using rule 27 (factor -> designator .)
    MINUS           reduce using rule 27 (factor -> designator .)
    RPAREN          reduce using rule 27 (factor -> designator .)
    DO              reduce using rule 27 (factor -> designator .)
    DOT             shift and go to state 43


state 32

    (28) designator -> IDENTIFIER .

    DOT             reduce using rule 28 (designator -> IDENTIFIER .)
    TIMES           reduce using rule 28 (designator -> IDENTIFIER .)
    DIVIDE          reduce using rule 28 (designator -> IDENTIFIER .)
    MOD             reduce using rule 28 (designator -> IDENTIFIER .)
    SEMICOLON       reduce using rule 28 (designator -> IDENTIFIER .)
    PLUS            reduce using rule 28 (designator -> IDENTIFIER .)
    MINUS           reduce using rule 28 (designator -> IDENTIFIER .)
    RPAREN          reduce using rule 28 (designator -> IDENTIFIER .)
    DO              reduce using rule 28 (designator -> IDENTIFIER .)


state 33

    (15) for_statement -> FOR IDENTIFIER . IN RANGE expression DO NEWLINE declaration_list END

    IN              shift and go to state 44


state 34

    (8) variable_declaration -> type COLON IDENTIFIER . EQUALS expression SEMICOLON

    EQUALS          shift and go to state 45


state 35

    (14) read_statement -> GET type COLON . IDENTIFIER BY expression SEMICOLON

    IDENTIFIER      shift and go to state 46


state 36

    (13) print_statement -> SHOW expression SEMICOLON .

    INT             reduce using rule 13 (print_statement -> SHOW expression SEMICOLON .)
    BOOLEAN         reduce using rule 13 (print_statement -> SHOW expression SEMICOLON .)
    TEXT            reduce using rule 13 (print_statement -> SHOW expression SEMICOLON .)
    FLOAT           reduce using rule 13 (print_statement -> SHOW expression SEMICOLON .)
    GET             reduce using rule 13 (print_statement -> SHOW expression SEMICOLON .)
    SHOW            reduce using rule 13 (print_statement -> SHOW expression SEMICOLON .)
    FOR             reduce using rule 13 (print_statement -> SHOW expression SEMICOLON .)
    NEWLINE         reduce using rule 13 (print_statement -> SHOW expression SEMICOLON .)
    $end            reduce using rule 13 (print_statement -> SHOW expression SEMICOLON .)
    END             reduce using rule 13 (print_statement -> SHOW expression SEMICOLON .)


state 37

    (16) expression -> expression PLUS . term
    (19) term -> . term TIMES factor
    (20) term -> . term DIVIDE factor
    (21) term -> . term MOD factor
    (22) term -> . factor
    (23) factor -> . NUMBER
    (24) factor -> . FLOAT
    (25) factor -> . CHARCONST
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . designator
    (28) designator -> . IDENTIFIER
    (29) designator -> . designator DOT IDENTIFIER

    NUMBER          shift and go to state 27
    FLOAT           shift and go to state 28
    CHARCONST       shift and go to state 29
    LPAREN          shift and go to state 30
    IDENTIFIER      shift and go to state 32

    term                           shift and go to state 47
    factor                         shift and go to state 26
    designator                     shift and go to state 31

state 38

    (17) expression -> expression MINUS . term
    (19) term -> . term TIMES factor
    (20) term -> . term DIVIDE factor
    (21) term -> . term MOD factor
    (22) term -> . factor
    (23) factor -> . NUMBER
    (24) factor -> . FLOAT
    (25) factor -> . CHARCONST
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . designator
    (28) designator -> . IDENTIFIER
    (29) designator -> . designator DOT IDENTIFIER

    NUMBER          shift and go to state 27
    FLOAT           shift and go to state 28
    CHARCONST       shift and go to state 29
    LPAREN          shift and go to state 30
    IDENTIFIER      shift and go to state 32

    term                           shift and go to state 48
    factor                         shift and go to state 26
    designator                     shift and go to state 31

state 39

    (19) term -> term TIMES . factor
    (23) factor -> . NUMBER
    (24) factor -> . FLOAT
    (25) factor -> . CHARCONST
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . designator
    (28) designator -> . IDENTIFIER
    (29) designator -> . designator DOT IDENTIFIER

    NUMBER          shift and go to state 27
    FLOAT           shift and go to state 28
    CHARCONST       shift and go to state 29
    LPAREN          shift and go to state 30
    IDENTIFIER      shift and go to state 32

    factor                         shift and go to state 49
    designator                     shift and go to state 31

state 40

    (20) term -> term DIVIDE . factor
    (23) factor -> . NUMBER
    (24) factor -> . FLOAT
    (25) factor -> . CHARCONST
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . designator
    (28) designator -> . IDENTIFIER
    (29) designator -> . designator DOT IDENTIFIER

    NUMBER          shift and go to state 27
    FLOAT           shift and go to state 28
    CHARCONST       shift and go to state 29
    LPAREN          shift and go to state 30
    IDENTIFIER      shift and go to state 32

    factor                         shift and go to state 50
    designator                     shift and go to state 31

state 41

    (21) term -> term MOD . factor
    (23) factor -> . NUMBER
    (24) factor -> . FLOAT
    (25) factor -> . CHARCONST
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . designator
    (28) designator -> . IDENTIFIER
    (29) designator -> . designator DOT IDENTIFIER

    NUMBER          shift and go to state 27
    FLOAT           shift and go to state 28
    CHARCONST       shift and go to state 29
    LPAREN          shift and go to state 30
    IDENTIFIER      shift and go to state 32

    factor                         shift and go to state 51
    designator                     shift and go to state 31

state 42

    (26) factor -> LPAREN expression . RPAREN
    (16) expression -> expression . PLUS term
    (17) expression -> expression . MINUS term

    RPAREN          shift and go to state 52
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38


state 43

    (29) designator -> designator DOT . IDENTIFIER

    IDENTIFIER      shift and go to state 53


state 44

    (15) for_statement -> FOR IDENTIFIER IN . RANGE expression DO NEWLINE declaration_list END

    RANGE           shift and go to state 54


state 45

    (8) variable_declaration -> type COLON IDENTIFIER EQUALS . expression SEMICOLON
    (16) expression -> . expression PLUS term
    (17) expression -> . expression MINUS term
    (18) expression -> . term
    (34) expression -> . NULL
    (19) term -> . term TIMES factor
    (20) term -> . term DIVIDE factor
    (21) term -> . term MOD factor
    (22) term -> . factor
    (23) factor -> . NUMBER
    (24) factor -> . FLOAT
    (25) factor -> . CHARCONST
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . designator
    (28) designator -> . IDENTIFIER
    (29) designator -> . designator DOT IDENTIFIER

    NULL            shift and go to state 25
    NUMBER          shift and go to state 27
    FLOAT           shift and go to state 28
    CHARCONST       shift and go to state 29
    LPAREN          shift and go to state 30
    IDENTIFIER      shift and go to state 32

    expression                     shift and go to state 55
    term                           shift and go to state 24
    factor                         shift and go to state 26
    designator                     shift and go to state 31

state 46

    (14) read_statement -> GET type COLON IDENTIFIER . BY expression SEMICOLON

    BY              shift and go to state 56


state 47

    (16) expression -> expression PLUS term .
    (19) term -> term . TIMES factor
    (20) term -> term . DIVIDE factor
    (21) term -> term . MOD factor

    SEMICOLON       reduce using rule 16 (expression -> expression PLUS term .)
    PLUS            reduce using rule 16 (expression -> expression PLUS term .)
    MINUS           reduce using rule 16 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 16 (expression -> expression PLUS term .)
    DO              reduce using rule 16 (expression -> expression PLUS term .)
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40
    MOD             shift and go to state 41


state 48

    (17) expression -> expression MINUS term .
    (19) term -> term . TIMES factor
    (20) term -> term . DIVIDE factor
    (21) term -> term . MOD factor

    SEMICOLON       reduce using rule 17 (expression -> expression MINUS term .)
    PLUS            reduce using rule 17 (expression -> expression MINUS term .)
    MINUS           reduce using rule 17 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 17 (expression -> expression MINUS term .)
    DO              reduce using rule 17 (expression -> expression MINUS term .)
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40
    MOD             shift and go to state 41


state 49

    (19) term -> term TIMES factor .

    TIMES           reduce using rule 19 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 19 (term -> term TIMES factor .)
    MOD             reduce using rule 19 (term -> term TIMES factor .)
    SEMICOLON       reduce using rule 19 (term -> term TIMES factor .)
    PLUS            reduce using rule 19 (term -> term TIMES factor .)
    MINUS           reduce using rule 19 (term -> term TIMES factor .)
    RPAREN          reduce using rule 19 (term -> term TIMES factor .)
    DO              reduce using rule 19 (term -> term TIMES factor .)


state 50

    (20) term -> term DIVIDE factor .

    TIMES           reduce using rule 20 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 20 (term -> term DIVIDE factor .)
    MOD             reduce using rule 20 (term -> term DIVIDE factor .)
    SEMICOLON       reduce using rule 20 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 20 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 20 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 20 (term -> term DIVIDE factor .)
    DO              reduce using rule 20 (term -> term DIVIDE factor .)


state 51

    (21) term -> term MOD factor .

    TIMES           reduce using rule 21 (term -> term MOD factor .)
    DIVIDE          reduce using rule 21 (term -> term MOD factor .)
    MOD             reduce using rule 21 (term -> term MOD factor .)
    SEMICOLON       reduce using rule 21 (term -> term MOD factor .)
    PLUS            reduce using rule 21 (term -> term MOD factor .)
    MINUS           reduce using rule 21 (term -> term MOD factor .)
    RPAREN          reduce using rule 21 (term -> term MOD factor .)
    DO              reduce using rule 21 (term -> term MOD factor .)


state 52

    (26) factor -> LPAREN expression RPAREN .

    TIMES           reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    MOD             reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    DO              reduce using rule 26 (factor -> LPAREN expression RPAREN .)


state 53

    (29) designator -> designator DOT IDENTIFIER .

    DOT             reduce using rule 29 (designator -> designator DOT IDENTIFIER .)
    TIMES           reduce using rule 29 (designator -> designator DOT IDENTIFIER .)
    DIVIDE          reduce using rule 29 (designator -> designator DOT IDENTIFIER .)
    MOD             reduce using rule 29 (designator -> designator DOT IDENTIFIER .)
    SEMICOLON       reduce using rule 29 (designator -> designator DOT IDENTIFIER .)
    PLUS            reduce using rule 29 (designator -> designator DOT IDENTIFIER .)
    MINUS           reduce using rule 29 (designator -> designator DOT IDENTIFIER .)
    RPAREN          reduce using rule 29 (designator -> designator DOT IDENTIFIER .)
    DO              reduce using rule 29 (designator -> designator DOT IDENTIFIER .)


state 54

    (15) for_statement -> FOR IDENTIFIER IN RANGE . expression DO NEWLINE declaration_list END
    (16) expression -> . expression PLUS term
    (17) expression -> . expression MINUS term
    (18) expression -> . term
    (34) expression -> . NULL
    (19) term -> . term TIMES factor
    (20) term -> . term DIVIDE factor
    (21) term -> . term MOD factor
    (22) term -> . factor
    (23) factor -> . NUMBER
    (24) factor -> . FLOAT
    (25) factor -> . CHARCONST
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . designator
    (28) designator -> . IDENTIFIER
    (29) designator -> . designator DOT IDENTIFIER

    NULL            shift and go to state 25
    NUMBER          shift and go to state 27
    FLOAT           shift and go to state 28
    CHARCONST       shift and go to state 29
    LPAREN          shift and go to state 30
    IDENTIFIER      shift and go to state 32

    expression                     shift and go to state 57
    term                           shift and go to state 24
    factor                         shift and go to state 26
    designator                     shift and go to state 31

state 55

    (8) variable_declaration -> type COLON IDENTIFIER EQUALS expression . SEMICOLON
    (16) expression -> expression . PLUS term
    (17) expression -> expression . MINUS term

    SEMICOLON       shift and go to state 58
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38


state 56

    (14) read_statement -> GET type COLON IDENTIFIER BY . expression SEMICOLON
    (16) expression -> . expression PLUS term
    (17) expression -> . expression MINUS term
    (18) expression -> . term
    (34) expression -> . NULL
    (19) term -> . term TIMES factor
    (20) term -> . term DIVIDE factor
    (21) term -> . term MOD factor
    (22) term -> . factor
    (23) factor -> . NUMBER
    (24) factor -> . FLOAT
    (25) factor -> . CHARCONST
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . designator
    (28) designator -> . IDENTIFIER
    (29) designator -> . designator DOT IDENTIFIER

    NULL            shift and go to state 25
    NUMBER          shift and go to state 27
    FLOAT           shift and go to state 28
    CHARCONST       shift and go to state 29
    LPAREN          shift and go to state 30
    IDENTIFIER      shift and go to state 32

    expression                     shift and go to state 59
    term                           shift and go to state 24
    factor                         shift and go to state 26
    designator                     shift and go to state 31

state 57

    (15) for_statement -> FOR IDENTIFIER IN RANGE expression . DO NEWLINE declaration_list END
    (16) expression -> expression . PLUS term
    (17) expression -> expression . MINUS term

    DO              shift and go to state 60
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38


state 58

    (8) variable_declaration -> type COLON IDENTIFIER EQUALS expression SEMICOLON .

    INT             reduce using rule 8 (variable_declaration -> type COLON IDENTIFIER EQUALS expression SEMICOLON .)
    BOOLEAN         reduce using rule 8 (variable_declaration -> type COLON IDENTIFIER EQUALS expression SEMICOLON .)
    TEXT            reduce using rule 8 (variable_declaration -> type COLON IDENTIFIER EQUALS expression SEMICOLON .)
    FLOAT           reduce using rule 8 (variable_declaration -> type COLON IDENTIFIER EQUALS expression SEMICOLON .)
    GET             reduce using rule 8 (variable_declaration -> type COLON IDENTIFIER EQUALS expression SEMICOLON .)
    SHOW            reduce using rule 8 (variable_declaration -> type COLON IDENTIFIER EQUALS expression SEMICOLON .)
    FOR             reduce using rule 8 (variable_declaration -> type COLON IDENTIFIER EQUALS expression SEMICOLON .)
    NEWLINE         reduce using rule 8 (variable_declaration -> type COLON IDENTIFIER EQUALS expression SEMICOLON .)
    $end            reduce using rule 8 (variable_declaration -> type COLON IDENTIFIER EQUALS expression SEMICOLON .)
    END             reduce using rule 8 (variable_declaration -> type COLON IDENTIFIER EQUALS expression SEMICOLON .)


state 59

    (14) read_statement -> GET type COLON IDENTIFIER BY expression . SEMICOLON
    (16) expression -> expression . PLUS term
    (17) expression -> expression . MINUS term

    SEMICOLON       shift and go to state 61
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38


state 60

    (15) for_statement -> FOR IDENTIFIER IN RANGE expression DO . NEWLINE declaration_list END

    NEWLINE         shift and go to state 62


state 61

    (14) read_statement -> GET type COLON IDENTIFIER BY expression SEMICOLON .

    INT             reduce using rule 14 (read_statement -> GET type COLON IDENTIFIER BY expression SEMICOLON .)
    BOOLEAN         reduce using rule 14 (read_statement -> GET type COLON IDENTIFIER BY expression SEMICOLON .)
    TEXT            reduce using rule 14 (read_statement -> GET type COLON IDENTIFIER BY expression SEMICOLON .)
    FLOAT           reduce using rule 14 (read_statement -> GET type COLON IDENTIFIER BY expression SEMICOLON .)
    GET             reduce using rule 14 (read_statement -> GET type COLON IDENTIFIER BY expression SEMICOLON .)
    SHOW            reduce using rule 14 (read_statement -> GET type COLON IDENTIFIER BY expression SEMICOLON .)
    FOR             reduce using rule 14 (read_statement -> GET type COLON IDENTIFIER BY expression SEMICOLON .)
    NEWLINE         reduce using rule 14 (read_statement -> GET type COLON IDENTIFIER BY expression SEMICOLON .)
    $end            reduce using rule 14 (read_statement -> GET type COLON IDENTIFIER BY expression SEMICOLON .)
    END             reduce using rule 14 (read_statement -> GET type COLON IDENTIFIER BY expression SEMICOLON .)


state 62

    (15) for_statement -> FOR IDENTIFIER IN RANGE expression DO NEWLINE . declaration_list END
    (4) declaration_list -> . declaration_list declaration
    (5) declaration_list -> . declaration
    (6) declaration -> . variable_declaration
    (7) declaration -> . statement
    (8) variable_declaration -> . type COLON IDENTIFIER EQUALS expression SEMICOLON
    (9) statement -> . read_statement
    (10) statement -> . print_statement
    (11) statement -> . for_statement
    (12) statement -> . newline_statement
    (30) type -> . INT
    (31) type -> . BOOLEAN
    (32) type -> . TEXT
    (33) type -> . FLOAT
    (14) read_statement -> . GET type COLON IDENTIFIER BY expression SEMICOLON
    (13) print_statement -> . SHOW expression SEMICOLON
    (15) for_statement -> . FOR IDENTIFIER IN RANGE expression DO NEWLINE declaration_list END
    (2) newline_statement -> . NEWLINE
    (3) newline_statement -> . newline_statement NEWLINE

    INT             shift and go to state 11
    BOOLEAN         shift and go to state 12
    TEXT            shift and go to state 13
    FLOAT           shift and go to state 14
    GET             shift and go to state 15
    SHOW            shift and go to state 16
    FOR             shift and go to state 17
    NEWLINE         shift and go to state 18

    declaration_list               shift and go to state 63
    declaration                    shift and go to state 3
    variable_declaration           shift and go to state 4
    statement                      shift and go to state 5
    type                           shift and go to state 6
    read_statement                 shift and go to state 7
    print_statement                shift and go to state 8
    for_statement                  shift and go to state 9
    newline_statement              shift and go to state 10

state 63

    (15) for_statement -> FOR IDENTIFIER IN RANGE expression DO NEWLINE declaration_list . END
    (4) declaration_list -> declaration_list . declaration
    (6) declaration -> . variable_declaration
    (7) declaration -> . statement
    (8) variable_declaration -> . type COLON IDENTIFIER EQUALS expression SEMICOLON
    (9) statement -> . read_statement
    (10) statement -> . print_statement
    (11) statement -> . for_statement
    (12) statement -> . newline_statement
    (30) type -> . INT
    (31) type -> . BOOLEAN
    (32) type -> . TEXT
    (33) type -> . FLOAT
    (14) read_statement -> . GET type COLON IDENTIFIER BY expression SEMICOLON
    (13) print_statement -> . SHOW expression SEMICOLON
    (15) for_statement -> . FOR IDENTIFIER IN RANGE expression DO NEWLINE declaration_list END
    (2) newline_statement -> . NEWLINE
    (3) newline_statement -> . newline_statement NEWLINE

    END             shift and go to state 64
    INT             shift and go to state 11
    BOOLEAN         shift and go to state 12
    TEXT            shift and go to state 13
    FLOAT           shift and go to state 14
    GET             shift and go to state 15
    SHOW            shift and go to state 16
    FOR             shift and go to state 17
    NEWLINE         shift and go to state 18

    declaration                    shift and go to state 19
    variable_declaration           shift and go to state 4
    statement                      shift and go to state 5
    type                           shift and go to state 6
    read_statement                 shift and go to state 7
    print_statement                shift and go to state 8
    for_statement                  shift and go to state 9
    newline_statement              shift and go to state 10

state 64

    (15) for_statement -> FOR IDENTIFIER IN RANGE expression DO NEWLINE declaration_list END .

    INT             reduce using rule 15 (for_statement -> FOR IDENTIFIER IN RANGE expression DO NEWLINE declaration_list END .)
    BOOLEAN         reduce using rule 15 (for_statement -> FOR IDENTIFIER IN RANGE expression DO NEWLINE declaration_list END .)
    TEXT            reduce using rule 15 (for_statement -> FOR IDENTIFIER IN RANGE expression DO NEWLINE declaration_list END .)
    FLOAT           reduce using rule 15 (for_statement -> FOR IDENTIFIER IN RANGE expression DO NEWLINE declaration_list END .)
    GET             reduce using rule 15 (for_statement -> FOR IDENTIFIER IN RANGE expression DO NEWLINE declaration_list END .)
    SHOW            reduce using rule 15 (for_statement -> FOR IDENTIFIER IN RANGE expression DO NEWLINE declaration_list END .)
    FOR             reduce using rule 15 (for_statement -> FOR IDENTIFIER IN RANGE expression DO NEWLINE declaration_list END .)
    NEWLINE         reduce using rule 15 (for_statement -> FOR IDENTIFIER IN RANGE expression DO NEWLINE declaration_list END .)
    $end            reduce using rule 15 (for_statement -> FOR IDENTIFIER IN RANGE expression DO NEWLINE declaration_list END .)
    END             reduce using rule 15 (for_statement -> FOR IDENTIFIER IN RANGE expression DO NEWLINE declaration_list END .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for NEWLINE in state 10 resolved as shift
