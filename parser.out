Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMA
    FUNCTION
    LBRACE
    RBRACE
    RETURN
    TYPE
    VAR

Grammar

Rule 0     S' -> program
Rule 1     program -> declaration_list
Rule 2     newline_statement -> NEWLINE
Rule 3     newline_statement -> newline_statement NEWLINE
Rule 4     declaration_list -> declaration_list declaration
Rule 5     declaration_list -> declaration
Rule 6     declaration -> variable_declaration
Rule 7     declaration -> statement
Rule 8     variable_declaration -> factor COLON IDENTIFIER EQUALS expression SEMICOLON
Rule 9     variable_declaration -> IDENTIFIER EQUALS expression SEMICOLON
Rule 10    statement -> read_statement
Rule 11    statement -> print_statement
Rule 12    statement -> if_statement
Rule 13    statement -> for_statement
Rule 14    statement -> newline_statement
Rule 15    print_statement -> SHOW expression SEMICOLON
Rule 16    read_statement -> GET factor COLON IDENTIFIER BY expression SEMICOLON
Rule 17    if_statement -> HAVING condition DO declaration_list END
Rule 18    if_statement -> HAVING condition DO declaration_list EITHER declaration_list END
Rule 19    if_statement -> HAVING condition DO declaration_list EITHER condition DO declaration_list END
Rule 20    condition -> expression
Rule 21    for_statement -> FOR IDENTIFIER IN RANGE expression DO NEWLINE declaration_list END
Rule 22    expression -> expression PLUS expression
Rule 23    expression -> expression MINUS expression
Rule 24    expression -> expression TIMES expression
Rule 25    expression -> expression DIVIDE expression
Rule 26    expression -> expression MOD expression
Rule 27    expression -> expression EQ expression
Rule 28    expression -> expression NEQ expression
Rule 29    expression -> expression GT expression
Rule 30    expression -> expression GTE expression
Rule 31    expression -> expression LT expression
Rule 32    expression -> expression LTE expression
Rule 33    expression -> expression EQUALS expression
Rule 34    expression -> expression OR expression
Rule 35    expression -> factor
Rule 36    factor -> NUMBER
Rule 37    factor -> FLOAT
Rule 38    factor -> INT
Rule 39    factor -> BOOLEAN
Rule 40    factor -> CHARCONST
Rule 41    factor -> TEXT
Rule 42    factor -> NULL
Rule 43    factor -> LPAREN expression RPAREN
Rule 44    factor -> designator
Rule 45    designator -> IDENTIFIER
Rule 46    designator -> designator DOT IDENTIFIER

Terminals, with rules where they appear

BOOLEAN              : 39
BY                   : 16
CHARCONST            : 40
COLON                : 8 16
COMMA                : 
DIVIDE               : 25
DO                   : 17 18 19 19 21
DOT                  : 46
EITHER               : 18 19
END                  : 17 18 19 21
EQ                   : 27
EQUALS               : 8 9 33
FLOAT                : 37
FOR                  : 21
FUNCTION             : 
GET                  : 16
GT                   : 29
GTE                  : 30
HAVING               : 17 18 19
IDENTIFIER           : 8 9 16 21 45 46
IN                   : 21
INT                  : 38
LBRACE               : 
LPAREN               : 43
LT                   : 31
LTE                  : 32
MINUS                : 23
MOD                  : 26
NEQ                  : 28
NEWLINE              : 2 3 21
NULL                 : 42
NUMBER               : 36
OR                   : 34
PLUS                 : 22
RANGE                : 21
RBRACE               : 
RETURN               : 
RPAREN               : 43
SEMICOLON            : 8 9 15 16
SHOW                 : 15
TEXT                 : 41
TIMES                : 24
TYPE                 : 
VAR                  : 
error                : 

Nonterminals, with rules where they appear

condition            : 17 18 19 19
declaration          : 4 5
declaration_list     : 1 4 17 18 18 19 19 21
designator           : 44 46
expression           : 8 9 15 16 20 21 22 22 23 23 24 24 25 25 26 26 27 27 28 28 29 29 30 30 31 31 32 32 33 33 34 34 43
factor               : 8 16 35
for_statement        : 13
if_statement         : 12
newline_statement    : 3 14
print_statement      : 11
program              : 0
read_statement       : 10
statement            : 7
variable_declaration : 6

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . declaration_list
    (4) declaration_list -> . declaration_list declaration
    (5) declaration_list -> . declaration
    (6) declaration -> . variable_declaration
    (7) declaration -> . statement
    (8) variable_declaration -> . factor COLON IDENTIFIER EQUALS expression SEMICOLON
    (9) variable_declaration -> . IDENTIFIER EQUALS expression SEMICOLON
    (10) statement -> . read_statement
    (11) statement -> . print_statement
    (12) statement -> . if_statement
    (13) statement -> . for_statement
    (14) statement -> . newline_statement
    (36) factor -> . NUMBER
    (37) factor -> . FLOAT
    (38) factor -> . INT
    (39) factor -> . BOOLEAN
    (40) factor -> . CHARCONST
    (41) factor -> . TEXT
    (42) factor -> . NULL
    (43) factor -> . LPAREN expression RPAREN
    (44) factor -> . designator
    (16) read_statement -> . GET factor COLON IDENTIFIER BY expression SEMICOLON
    (15) print_statement -> . SHOW expression SEMICOLON
    (17) if_statement -> . HAVING condition DO declaration_list END
    (18) if_statement -> . HAVING condition DO declaration_list EITHER declaration_list END
    (19) if_statement -> . HAVING condition DO declaration_list EITHER condition DO declaration_list END
    (21) for_statement -> . FOR IDENTIFIER IN RANGE expression DO NEWLINE declaration_list END
    (2) newline_statement -> . NEWLINE
    (3) newline_statement -> . newline_statement NEWLINE
    (45) designator -> . IDENTIFIER
    (46) designator -> . designator DOT IDENTIFIER

    IDENTIFIER      shift and go to state 7
    NUMBER          shift and go to state 13
    FLOAT           shift and go to state 14
    INT             shift and go to state 15
    BOOLEAN         shift and go to state 16
    CHARCONST       shift and go to state 17
    TEXT            shift and go to state 18
    NULL            shift and go to state 19
    LPAREN          shift and go to state 20
    GET             shift and go to state 22
    SHOW            shift and go to state 23
    HAVING          shift and go to state 24
    FOR             shift and go to state 25
    NEWLINE         shift and go to state 26

    program                        shift and go to state 1
    declaration_list               shift and go to state 2
    declaration                    shift and go to state 3
    variable_declaration           shift and go to state 4
    statement                      shift and go to state 5
    factor                         shift and go to state 6
    read_statement                 shift and go to state 8
    print_statement                shift and go to state 9
    if_statement                   shift and go to state 10
    for_statement                  shift and go to state 11
    newline_statement              shift and go to state 12
    designator                     shift and go to state 21

state 1

    (0) S' -> program .



state 2

    (1) program -> declaration_list .
    (4) declaration_list -> declaration_list . declaration
    (6) declaration -> . variable_declaration
    (7) declaration -> . statement
    (8) variable_declaration -> . factor COLON IDENTIFIER EQUALS expression SEMICOLON
    (9) variable_declaration -> . IDENTIFIER EQUALS expression SEMICOLON
    (10) statement -> . read_statement
    (11) statement -> . print_statement
    (12) statement -> . if_statement
    (13) statement -> . for_statement
    (14) statement -> . newline_statement
    (36) factor -> . NUMBER
    (37) factor -> . FLOAT
    (38) factor -> . INT
    (39) factor -> . BOOLEAN
    (40) factor -> . CHARCONST
    (41) factor -> . TEXT
    (42) factor -> . NULL
    (43) factor -> . LPAREN expression RPAREN
    (44) factor -> . designator
    (16) read_statement -> . GET factor COLON IDENTIFIER BY expression SEMICOLON
    (15) print_statement -> . SHOW expression SEMICOLON
    (17) if_statement -> . HAVING condition DO declaration_list END
    (18) if_statement -> . HAVING condition DO declaration_list EITHER declaration_list END
    (19) if_statement -> . HAVING condition DO declaration_list EITHER condition DO declaration_list END
    (21) for_statement -> . FOR IDENTIFIER IN RANGE expression DO NEWLINE declaration_list END
    (2) newline_statement -> . NEWLINE
    (3) newline_statement -> . newline_statement NEWLINE
    (45) designator -> . IDENTIFIER
    (46) designator -> . designator DOT IDENTIFIER

    $end            reduce using rule 1 (program -> declaration_list .)
    IDENTIFIER      shift and go to state 7
    NUMBER          shift and go to state 13
    FLOAT           shift and go to state 14
    INT             shift and go to state 15
    BOOLEAN         shift and go to state 16
    CHARCONST       shift and go to state 17
    TEXT            shift and go to state 18
    NULL            shift and go to state 19
    LPAREN          shift and go to state 20
    GET             shift and go to state 22
    SHOW            shift and go to state 23
    HAVING          shift and go to state 24
    FOR             shift and go to state 25
    NEWLINE         shift and go to state 26

    declaration                    shift and go to state 27
    variable_declaration           shift and go to state 4
    statement                      shift and go to state 5
    factor                         shift and go to state 6
    read_statement                 shift and go to state 8
    print_statement                shift and go to state 9
    if_statement                   shift and go to state 10
    for_statement                  shift and go to state 11
    newline_statement              shift and go to state 12
    designator                     shift and go to state 21

state 3

    (5) declaration_list -> declaration .

    IDENTIFIER      reduce using rule 5 (declaration_list -> declaration .)
    NUMBER          reduce using rule 5 (declaration_list -> declaration .)
    FLOAT           reduce using rule 5 (declaration_list -> declaration .)
    INT             reduce using rule 5 (declaration_list -> declaration .)
    BOOLEAN         reduce using rule 5 (declaration_list -> declaration .)
    CHARCONST       reduce using rule 5 (declaration_list -> declaration .)
    TEXT            reduce using rule 5 (declaration_list -> declaration .)
    NULL            reduce using rule 5 (declaration_list -> declaration .)
    LPAREN          reduce using rule 5 (declaration_list -> declaration .)
    GET             reduce using rule 5 (declaration_list -> declaration .)
    SHOW            reduce using rule 5 (declaration_list -> declaration .)
    HAVING          reduce using rule 5 (declaration_list -> declaration .)
    FOR             reduce using rule 5 (declaration_list -> declaration .)
    NEWLINE         reduce using rule 5 (declaration_list -> declaration .)
    $end            reduce using rule 5 (declaration_list -> declaration .)
    END             reduce using rule 5 (declaration_list -> declaration .)
    EITHER          reduce using rule 5 (declaration_list -> declaration .)


state 4

    (6) declaration -> variable_declaration .

    IDENTIFIER      reduce using rule 6 (declaration -> variable_declaration .)
    NUMBER          reduce using rule 6 (declaration -> variable_declaration .)
    FLOAT           reduce using rule 6 (declaration -> variable_declaration .)
    INT             reduce using rule 6 (declaration -> variable_declaration .)
    BOOLEAN         reduce using rule 6 (declaration -> variable_declaration .)
    CHARCONST       reduce using rule 6 (declaration -> variable_declaration .)
    TEXT            reduce using rule 6 (declaration -> variable_declaration .)
    NULL            reduce using rule 6 (declaration -> variable_declaration .)
    LPAREN          reduce using rule 6 (declaration -> variable_declaration .)
    GET             reduce using rule 6 (declaration -> variable_declaration .)
    SHOW            reduce using rule 6 (declaration -> variable_declaration .)
    HAVING          reduce using rule 6 (declaration -> variable_declaration .)
    FOR             reduce using rule 6 (declaration -> variable_declaration .)
    NEWLINE         reduce using rule 6 (declaration -> variable_declaration .)
    $end            reduce using rule 6 (declaration -> variable_declaration .)
    END             reduce using rule 6 (declaration -> variable_declaration .)
    EITHER          reduce using rule 6 (declaration -> variable_declaration .)


state 5

    (7) declaration -> statement .

    IDENTIFIER      reduce using rule 7 (declaration -> statement .)
    NUMBER          reduce using rule 7 (declaration -> statement .)
    FLOAT           reduce using rule 7 (declaration -> statement .)
    INT             reduce using rule 7 (declaration -> statement .)
    BOOLEAN         reduce using rule 7 (declaration -> statement .)
    CHARCONST       reduce using rule 7 (declaration -> statement .)
    TEXT            reduce using rule 7 (declaration -> statement .)
    NULL            reduce using rule 7 (declaration -> statement .)
    LPAREN          reduce using rule 7 (declaration -> statement .)
    GET             reduce using rule 7 (declaration -> statement .)
    SHOW            reduce using rule 7 (declaration -> statement .)
    HAVING          reduce using rule 7 (declaration -> statement .)
    FOR             reduce using rule 7 (declaration -> statement .)
    NEWLINE         reduce using rule 7 (declaration -> statement .)
    $end            reduce using rule 7 (declaration -> statement .)
    END             reduce using rule 7 (declaration -> statement .)
    EITHER          reduce using rule 7 (declaration -> statement .)


state 6

    (8) variable_declaration -> factor . COLON IDENTIFIER EQUALS expression SEMICOLON

    COLON           shift and go to state 28


state 7

    (9) variable_declaration -> IDENTIFIER . EQUALS expression SEMICOLON
    (45) designator -> IDENTIFIER .

  ! shift/reduce conflict for EQUALS resolved as shift
    EQUALS          shift and go to state 29
    DOT             reduce using rule 45 (designator -> IDENTIFIER .)
    COLON           reduce using rule 45 (designator -> IDENTIFIER .)
    PLUS            reduce using rule 45 (designator -> IDENTIFIER .)
    MINUS           reduce using rule 45 (designator -> IDENTIFIER .)
    TIMES           reduce using rule 45 (designator -> IDENTIFIER .)
    DIVIDE          reduce using rule 45 (designator -> IDENTIFIER .)
    MOD             reduce using rule 45 (designator -> IDENTIFIER .)
    EQ              reduce using rule 45 (designator -> IDENTIFIER .)
    NEQ             reduce using rule 45 (designator -> IDENTIFIER .)
    GT              reduce using rule 45 (designator -> IDENTIFIER .)
    GTE             reduce using rule 45 (designator -> IDENTIFIER .)
    LT              reduce using rule 45 (designator -> IDENTIFIER .)
    LTE             reduce using rule 45 (designator -> IDENTIFIER .)
    OR              reduce using rule 45 (designator -> IDENTIFIER .)
    DO              reduce using rule 45 (designator -> IDENTIFIER .)

  ! EQUALS          [ reduce using rule 45 (designator -> IDENTIFIER .) ]


state 8

    (10) statement -> read_statement .

    IDENTIFIER      reduce using rule 10 (statement -> read_statement .)
    NUMBER          reduce using rule 10 (statement -> read_statement .)
    FLOAT           reduce using rule 10 (statement -> read_statement .)
    INT             reduce using rule 10 (statement -> read_statement .)
    BOOLEAN         reduce using rule 10 (statement -> read_statement .)
    CHARCONST       reduce using rule 10 (statement -> read_statement .)
    TEXT            reduce using rule 10 (statement -> read_statement .)
    NULL            reduce using rule 10 (statement -> read_statement .)
    LPAREN          reduce using rule 10 (statement -> read_statement .)
    GET             reduce using rule 10 (statement -> read_statement .)
    SHOW            reduce using rule 10 (statement -> read_statement .)
    HAVING          reduce using rule 10 (statement -> read_statement .)
    FOR             reduce using rule 10 (statement -> read_statement .)
    NEWLINE         reduce using rule 10 (statement -> read_statement .)
    $end            reduce using rule 10 (statement -> read_statement .)
    END             reduce using rule 10 (statement -> read_statement .)
    EITHER          reduce using rule 10 (statement -> read_statement .)


state 9

    (11) statement -> print_statement .

    IDENTIFIER      reduce using rule 11 (statement -> print_statement .)
    NUMBER          reduce using rule 11 (statement -> print_statement .)
    FLOAT           reduce using rule 11 (statement -> print_statement .)
    INT             reduce using rule 11 (statement -> print_statement .)
    BOOLEAN         reduce using rule 11 (statement -> print_statement .)
    CHARCONST       reduce using rule 11 (statement -> print_statement .)
    TEXT            reduce using rule 11 (statement -> print_statement .)
    NULL            reduce using rule 11 (statement -> print_statement .)
    LPAREN          reduce using rule 11 (statement -> print_statement .)
    GET             reduce using rule 11 (statement -> print_statement .)
    SHOW            reduce using rule 11 (statement -> print_statement .)
    HAVING          reduce using rule 11 (statement -> print_statement .)
    FOR             reduce using rule 11 (statement -> print_statement .)
    NEWLINE         reduce using rule 11 (statement -> print_statement .)
    $end            reduce using rule 11 (statement -> print_statement .)
    END             reduce using rule 11 (statement -> print_statement .)
    EITHER          reduce using rule 11 (statement -> print_statement .)


state 10

    (12) statement -> if_statement .

    IDENTIFIER      reduce using rule 12 (statement -> if_statement .)
    NUMBER          reduce using rule 12 (statement -> if_statement .)
    FLOAT           reduce using rule 12 (statement -> if_statement .)
    INT             reduce using rule 12 (statement -> if_statement .)
    BOOLEAN         reduce using rule 12 (statement -> if_statement .)
    CHARCONST       reduce using rule 12 (statement -> if_statement .)
    TEXT            reduce using rule 12 (statement -> if_statement .)
    NULL            reduce using rule 12 (statement -> if_statement .)
    LPAREN          reduce using rule 12 (statement -> if_statement .)
    GET             reduce using rule 12 (statement -> if_statement .)
    SHOW            reduce using rule 12 (statement -> if_statement .)
    HAVING          reduce using rule 12 (statement -> if_statement .)
    FOR             reduce using rule 12 (statement -> if_statement .)
    NEWLINE         reduce using rule 12 (statement -> if_statement .)
    $end            reduce using rule 12 (statement -> if_statement .)
    END             reduce using rule 12 (statement -> if_statement .)
    EITHER          reduce using rule 12 (statement -> if_statement .)


state 11

    (13) statement -> for_statement .

    IDENTIFIER      reduce using rule 13 (statement -> for_statement .)
    NUMBER          reduce using rule 13 (statement -> for_statement .)
    FLOAT           reduce using rule 13 (statement -> for_statement .)
    INT             reduce using rule 13 (statement -> for_statement .)
    BOOLEAN         reduce using rule 13 (statement -> for_statement .)
    CHARCONST       reduce using rule 13 (statement -> for_statement .)
    TEXT            reduce using rule 13 (statement -> for_statement .)
    NULL            reduce using rule 13 (statement -> for_statement .)
    LPAREN          reduce using rule 13 (statement -> for_statement .)
    GET             reduce using rule 13 (statement -> for_statement .)
    SHOW            reduce using rule 13 (statement -> for_statement .)
    HAVING          reduce using rule 13 (statement -> for_statement .)
    FOR             reduce using rule 13 (statement -> for_statement .)
    NEWLINE         reduce using rule 13 (statement -> for_statement .)
    $end            reduce using rule 13 (statement -> for_statement .)
    END             reduce using rule 13 (statement -> for_statement .)
    EITHER          reduce using rule 13 (statement -> for_statement .)


state 12

    (14) statement -> newline_statement .
    (3) newline_statement -> newline_statement . NEWLINE

  ! shift/reduce conflict for NEWLINE resolved as shift
    IDENTIFIER      reduce using rule 14 (statement -> newline_statement .)
    NUMBER          reduce using rule 14 (statement -> newline_statement .)
    FLOAT           reduce using rule 14 (statement -> newline_statement .)
    INT             reduce using rule 14 (statement -> newline_statement .)
    BOOLEAN         reduce using rule 14 (statement -> newline_statement .)
    CHARCONST       reduce using rule 14 (statement -> newline_statement .)
    TEXT            reduce using rule 14 (statement -> newline_statement .)
    NULL            reduce using rule 14 (statement -> newline_statement .)
    LPAREN          reduce using rule 14 (statement -> newline_statement .)
    GET             reduce using rule 14 (statement -> newline_statement .)
    SHOW            reduce using rule 14 (statement -> newline_statement .)
    HAVING          reduce using rule 14 (statement -> newline_statement .)
    FOR             reduce using rule 14 (statement -> newline_statement .)
    $end            reduce using rule 14 (statement -> newline_statement .)
    END             reduce using rule 14 (statement -> newline_statement .)
    EITHER          reduce using rule 14 (statement -> newline_statement .)
    NEWLINE         shift and go to state 30

  ! NEWLINE         [ reduce using rule 14 (statement -> newline_statement .) ]


state 13

    (36) factor -> NUMBER .

    COLON           reduce using rule 36 (factor -> NUMBER .)
    RPAREN          reduce using rule 36 (factor -> NUMBER .)
    PLUS            reduce using rule 36 (factor -> NUMBER .)
    MINUS           reduce using rule 36 (factor -> NUMBER .)
    TIMES           reduce using rule 36 (factor -> NUMBER .)
    DIVIDE          reduce using rule 36 (factor -> NUMBER .)
    MOD             reduce using rule 36 (factor -> NUMBER .)
    EQ              reduce using rule 36 (factor -> NUMBER .)
    NEQ             reduce using rule 36 (factor -> NUMBER .)
    GT              reduce using rule 36 (factor -> NUMBER .)
    GTE             reduce using rule 36 (factor -> NUMBER .)
    LT              reduce using rule 36 (factor -> NUMBER .)
    LTE             reduce using rule 36 (factor -> NUMBER .)
    EQUALS          reduce using rule 36 (factor -> NUMBER .)
    OR              reduce using rule 36 (factor -> NUMBER .)
    SEMICOLON       reduce using rule 36 (factor -> NUMBER .)
    DO              reduce using rule 36 (factor -> NUMBER .)


state 14

    (37) factor -> FLOAT .

    COLON           reduce using rule 37 (factor -> FLOAT .)
    RPAREN          reduce using rule 37 (factor -> FLOAT .)
    PLUS            reduce using rule 37 (factor -> FLOAT .)
    MINUS           reduce using rule 37 (factor -> FLOAT .)
    TIMES           reduce using rule 37 (factor -> FLOAT .)
    DIVIDE          reduce using rule 37 (factor -> FLOAT .)
    MOD             reduce using rule 37 (factor -> FLOAT .)
    EQ              reduce using rule 37 (factor -> FLOAT .)
    NEQ             reduce using rule 37 (factor -> FLOAT .)
    GT              reduce using rule 37 (factor -> FLOAT .)
    GTE             reduce using rule 37 (factor -> FLOAT .)
    LT              reduce using rule 37 (factor -> FLOAT .)
    LTE             reduce using rule 37 (factor -> FLOAT .)
    EQUALS          reduce using rule 37 (factor -> FLOAT .)
    OR              reduce using rule 37 (factor -> FLOAT .)
    SEMICOLON       reduce using rule 37 (factor -> FLOAT .)
    DO              reduce using rule 37 (factor -> FLOAT .)


state 15

    (38) factor -> INT .

    COLON           reduce using rule 38 (factor -> INT .)
    RPAREN          reduce using rule 38 (factor -> INT .)
    PLUS            reduce using rule 38 (factor -> INT .)
    MINUS           reduce using rule 38 (factor -> INT .)
    TIMES           reduce using rule 38 (factor -> INT .)
    DIVIDE          reduce using rule 38 (factor -> INT .)
    MOD             reduce using rule 38 (factor -> INT .)
    EQ              reduce using rule 38 (factor -> INT .)
    NEQ             reduce using rule 38 (factor -> INT .)
    GT              reduce using rule 38 (factor -> INT .)
    GTE             reduce using rule 38 (factor -> INT .)
    LT              reduce using rule 38 (factor -> INT .)
    LTE             reduce using rule 38 (factor -> INT .)
    EQUALS          reduce using rule 38 (factor -> INT .)
    OR              reduce using rule 38 (factor -> INT .)
    SEMICOLON       reduce using rule 38 (factor -> INT .)
    DO              reduce using rule 38 (factor -> INT .)


state 16

    (39) factor -> BOOLEAN .

    COLON           reduce using rule 39 (factor -> BOOLEAN .)
    RPAREN          reduce using rule 39 (factor -> BOOLEAN .)
    PLUS            reduce using rule 39 (factor -> BOOLEAN .)
    MINUS           reduce using rule 39 (factor -> BOOLEAN .)
    TIMES           reduce using rule 39 (factor -> BOOLEAN .)
    DIVIDE          reduce using rule 39 (factor -> BOOLEAN .)
    MOD             reduce using rule 39 (factor -> BOOLEAN .)
    EQ              reduce using rule 39 (factor -> BOOLEAN .)
    NEQ             reduce using rule 39 (factor -> BOOLEAN .)
    GT              reduce using rule 39 (factor -> BOOLEAN .)
    GTE             reduce using rule 39 (factor -> BOOLEAN .)
    LT              reduce using rule 39 (factor -> BOOLEAN .)
    LTE             reduce using rule 39 (factor -> BOOLEAN .)
    EQUALS          reduce using rule 39 (factor -> BOOLEAN .)
    OR              reduce using rule 39 (factor -> BOOLEAN .)
    SEMICOLON       reduce using rule 39 (factor -> BOOLEAN .)
    DO              reduce using rule 39 (factor -> BOOLEAN .)


state 17

    (40) factor -> CHARCONST .

    COLON           reduce using rule 40 (factor -> CHARCONST .)
    RPAREN          reduce using rule 40 (factor -> CHARCONST .)
    PLUS            reduce using rule 40 (factor -> CHARCONST .)
    MINUS           reduce using rule 40 (factor -> CHARCONST .)
    TIMES           reduce using rule 40 (factor -> CHARCONST .)
    DIVIDE          reduce using rule 40 (factor -> CHARCONST .)
    MOD             reduce using rule 40 (factor -> CHARCONST .)
    EQ              reduce using rule 40 (factor -> CHARCONST .)
    NEQ             reduce using rule 40 (factor -> CHARCONST .)
    GT              reduce using rule 40 (factor -> CHARCONST .)
    GTE             reduce using rule 40 (factor -> CHARCONST .)
    LT              reduce using rule 40 (factor -> CHARCONST .)
    LTE             reduce using rule 40 (factor -> CHARCONST .)
    EQUALS          reduce using rule 40 (factor -> CHARCONST .)
    OR              reduce using rule 40 (factor -> CHARCONST .)
    SEMICOLON       reduce using rule 40 (factor -> CHARCONST .)
    DO              reduce using rule 40 (factor -> CHARCONST .)


state 18

    (41) factor -> TEXT .

    COLON           reduce using rule 41 (factor -> TEXT .)
    RPAREN          reduce using rule 41 (factor -> TEXT .)
    PLUS            reduce using rule 41 (factor -> TEXT .)
    MINUS           reduce using rule 41 (factor -> TEXT .)
    TIMES           reduce using rule 41 (factor -> TEXT .)
    DIVIDE          reduce using rule 41 (factor -> TEXT .)
    MOD             reduce using rule 41 (factor -> TEXT .)
    EQ              reduce using rule 41 (factor -> TEXT .)
    NEQ             reduce using rule 41 (factor -> TEXT .)
    GT              reduce using rule 41 (factor -> TEXT .)
    GTE             reduce using rule 41 (factor -> TEXT .)
    LT              reduce using rule 41 (factor -> TEXT .)
    LTE             reduce using rule 41 (factor -> TEXT .)
    EQUALS          reduce using rule 41 (factor -> TEXT .)
    OR              reduce using rule 41 (factor -> TEXT .)
    SEMICOLON       reduce using rule 41 (factor -> TEXT .)
    DO              reduce using rule 41 (factor -> TEXT .)


state 19

    (42) factor -> NULL .

    COLON           reduce using rule 42 (factor -> NULL .)
    RPAREN          reduce using rule 42 (factor -> NULL .)
    PLUS            reduce using rule 42 (factor -> NULL .)
    MINUS           reduce using rule 42 (factor -> NULL .)
    TIMES           reduce using rule 42 (factor -> NULL .)
    DIVIDE          reduce using rule 42 (factor -> NULL .)
    MOD             reduce using rule 42 (factor -> NULL .)
    EQ              reduce using rule 42 (factor -> NULL .)
    NEQ             reduce using rule 42 (factor -> NULL .)
    GT              reduce using rule 42 (factor -> NULL .)
    GTE             reduce using rule 42 (factor -> NULL .)
    LT              reduce using rule 42 (factor -> NULL .)
    LTE             reduce using rule 42 (factor -> NULL .)
    EQUALS          reduce using rule 42 (factor -> NULL .)
    OR              reduce using rule 42 (factor -> NULL .)
    SEMICOLON       reduce using rule 42 (factor -> NULL .)
    DO              reduce using rule 42 (factor -> NULL .)


state 20

    (43) factor -> LPAREN . expression RPAREN
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression TIMES expression
    (25) expression -> . expression DIVIDE expression
    (26) expression -> . expression MOD expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NEQ expression
    (29) expression -> . expression GT expression
    (30) expression -> . expression GTE expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression LTE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . expression OR expression
    (35) expression -> . factor
    (36) factor -> . NUMBER
    (37) factor -> . FLOAT
    (38) factor -> . INT
    (39) factor -> . BOOLEAN
    (40) factor -> . CHARCONST
    (41) factor -> . TEXT
    (42) factor -> . NULL
    (43) factor -> . LPAREN expression RPAREN
    (44) factor -> . designator
    (45) designator -> . IDENTIFIER
    (46) designator -> . designator DOT IDENTIFIER

    NUMBER          shift and go to state 13
    FLOAT           shift and go to state 14
    INT             shift and go to state 15
    BOOLEAN         shift and go to state 16
    CHARCONST       shift and go to state 17
    TEXT            shift and go to state 18
    NULL            shift and go to state 19
    LPAREN          shift and go to state 20
    IDENTIFIER      shift and go to state 33

    expression                     shift and go to state 31
    factor                         shift and go to state 32
    designator                     shift and go to state 21

state 21

    (44) factor -> designator .
    (46) designator -> designator . DOT IDENTIFIER

    COLON           reduce using rule 44 (factor -> designator .)
    RPAREN          reduce using rule 44 (factor -> designator .)
    PLUS            reduce using rule 44 (factor -> designator .)
    MINUS           reduce using rule 44 (factor -> designator .)
    TIMES           reduce using rule 44 (factor -> designator .)
    DIVIDE          reduce using rule 44 (factor -> designator .)
    MOD             reduce using rule 44 (factor -> designator .)
    EQ              reduce using rule 44 (factor -> designator .)
    NEQ             reduce using rule 44 (factor -> designator .)
    GT              reduce using rule 44 (factor -> designator .)
    GTE             reduce using rule 44 (factor -> designator .)
    LT              reduce using rule 44 (factor -> designator .)
    LTE             reduce using rule 44 (factor -> designator .)
    EQUALS          reduce using rule 44 (factor -> designator .)
    OR              reduce using rule 44 (factor -> designator .)
    SEMICOLON       reduce using rule 44 (factor -> designator .)
    DO              reduce using rule 44 (factor -> designator .)
    DOT             shift and go to state 34


state 22

    (16) read_statement -> GET . factor COLON IDENTIFIER BY expression SEMICOLON
    (36) factor -> . NUMBER
    (37) factor -> . FLOAT
    (38) factor -> . INT
    (39) factor -> . BOOLEAN
    (40) factor -> . CHARCONST
    (41) factor -> . TEXT
    (42) factor -> . NULL
    (43) factor -> . LPAREN expression RPAREN
    (44) factor -> . designator
    (45) designator -> . IDENTIFIER
    (46) designator -> . designator DOT IDENTIFIER

    NUMBER          shift and go to state 13
    FLOAT           shift and go to state 14
    INT             shift and go to state 15
    BOOLEAN         shift and go to state 16
    CHARCONST       shift and go to state 17
    TEXT            shift and go to state 18
    NULL            shift and go to state 19
    LPAREN          shift and go to state 20
    IDENTIFIER      shift and go to state 33

    factor                         shift and go to state 35
    designator                     shift and go to state 21

state 23

    (15) print_statement -> SHOW . expression SEMICOLON
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression TIMES expression
    (25) expression -> . expression DIVIDE expression
    (26) expression -> . expression MOD expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NEQ expression
    (29) expression -> . expression GT expression
    (30) expression -> . expression GTE expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression LTE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . expression OR expression
    (35) expression -> . factor
    (36) factor -> . NUMBER
    (37) factor -> . FLOAT
    (38) factor -> . INT
    (39) factor -> . BOOLEAN
    (40) factor -> . CHARCONST
    (41) factor -> . TEXT
    (42) factor -> . NULL
    (43) factor -> . LPAREN expression RPAREN
    (44) factor -> . designator
    (45) designator -> . IDENTIFIER
    (46) designator -> . designator DOT IDENTIFIER

    NUMBER          shift and go to state 13
    FLOAT           shift and go to state 14
    INT             shift and go to state 15
    BOOLEAN         shift and go to state 16
    CHARCONST       shift and go to state 17
    TEXT            shift and go to state 18
    NULL            shift and go to state 19
    LPAREN          shift and go to state 20
    IDENTIFIER      shift and go to state 33

    expression                     shift and go to state 36
    factor                         shift and go to state 32
    designator                     shift and go to state 21

state 24

    (17) if_statement -> HAVING . condition DO declaration_list END
    (18) if_statement -> HAVING . condition DO declaration_list EITHER declaration_list END
    (19) if_statement -> HAVING . condition DO declaration_list EITHER condition DO declaration_list END
    (20) condition -> . expression
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression TIMES expression
    (25) expression -> . expression DIVIDE expression
    (26) expression -> . expression MOD expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NEQ expression
    (29) expression -> . expression GT expression
    (30) expression -> . expression GTE expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression LTE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . expression OR expression
    (35) expression -> . factor
    (36) factor -> . NUMBER
    (37) factor -> . FLOAT
    (38) factor -> . INT
    (39) factor -> . BOOLEAN
    (40) factor -> . CHARCONST
    (41) factor -> . TEXT
    (42) factor -> . NULL
    (43) factor -> . LPAREN expression RPAREN
    (44) factor -> . designator
    (45) designator -> . IDENTIFIER
    (46) designator -> . designator DOT IDENTIFIER

    NUMBER          shift and go to state 13
    FLOAT           shift and go to state 14
    INT             shift and go to state 15
    BOOLEAN         shift and go to state 16
    CHARCONST       shift and go to state 17
    TEXT            shift and go to state 18
    NULL            shift and go to state 19
    LPAREN          shift and go to state 20
    IDENTIFIER      shift and go to state 33

    condition                      shift and go to state 37
    expression                     shift and go to state 38
    factor                         shift and go to state 32
    designator                     shift and go to state 21

state 25

    (21) for_statement -> FOR . IDENTIFIER IN RANGE expression DO NEWLINE declaration_list END

    IDENTIFIER      shift and go to state 39


state 26

    (2) newline_statement -> NEWLINE .

    NEWLINE         reduce using rule 2 (newline_statement -> NEWLINE .)
    IDENTIFIER      reduce using rule 2 (newline_statement -> NEWLINE .)
    NUMBER          reduce using rule 2 (newline_statement -> NEWLINE .)
    FLOAT           reduce using rule 2 (newline_statement -> NEWLINE .)
    INT             reduce using rule 2 (newline_statement -> NEWLINE .)
    BOOLEAN         reduce using rule 2 (newline_statement -> NEWLINE .)
    CHARCONST       reduce using rule 2 (newline_statement -> NEWLINE .)
    TEXT            reduce using rule 2 (newline_statement -> NEWLINE .)
    NULL            reduce using rule 2 (newline_statement -> NEWLINE .)
    LPAREN          reduce using rule 2 (newline_statement -> NEWLINE .)
    GET             reduce using rule 2 (newline_statement -> NEWLINE .)
    SHOW            reduce using rule 2 (newline_statement -> NEWLINE .)
    HAVING          reduce using rule 2 (newline_statement -> NEWLINE .)
    FOR             reduce using rule 2 (newline_statement -> NEWLINE .)
    $end            reduce using rule 2 (newline_statement -> NEWLINE .)
    END             reduce using rule 2 (newline_statement -> NEWLINE .)
    EITHER          reduce using rule 2 (newline_statement -> NEWLINE .)


state 27

    (4) declaration_list -> declaration_list declaration .

    IDENTIFIER      reduce using rule 4 (declaration_list -> declaration_list declaration .)
    NUMBER          reduce using rule 4 (declaration_list -> declaration_list declaration .)
    FLOAT           reduce using rule 4 (declaration_list -> declaration_list declaration .)
    INT             reduce using rule 4 (declaration_list -> declaration_list declaration .)
    BOOLEAN         reduce using rule 4 (declaration_list -> declaration_list declaration .)
    CHARCONST       reduce using rule 4 (declaration_list -> declaration_list declaration .)
    TEXT            reduce using rule 4 (declaration_list -> declaration_list declaration .)
    NULL            reduce using rule 4 (declaration_list -> declaration_list declaration .)
    LPAREN          reduce using rule 4 (declaration_list -> declaration_list declaration .)
    GET             reduce using rule 4 (declaration_list -> declaration_list declaration .)
    SHOW            reduce using rule 4 (declaration_list -> declaration_list declaration .)
    HAVING          reduce using rule 4 (declaration_list -> declaration_list declaration .)
    FOR             reduce using rule 4 (declaration_list -> declaration_list declaration .)
    NEWLINE         reduce using rule 4 (declaration_list -> declaration_list declaration .)
    $end            reduce using rule 4 (declaration_list -> declaration_list declaration .)
    END             reduce using rule 4 (declaration_list -> declaration_list declaration .)
    EITHER          reduce using rule 4 (declaration_list -> declaration_list declaration .)


state 28

    (8) variable_declaration -> factor COLON . IDENTIFIER EQUALS expression SEMICOLON

    IDENTIFIER      shift and go to state 40


state 29

    (9) variable_declaration -> IDENTIFIER EQUALS . expression SEMICOLON
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression TIMES expression
    (25) expression -> . expression DIVIDE expression
    (26) expression -> . expression MOD expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NEQ expression
    (29) expression -> . expression GT expression
    (30) expression -> . expression GTE expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression LTE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . expression OR expression
    (35) expression -> . factor
    (36) factor -> . NUMBER
    (37) factor -> . FLOAT
    (38) factor -> . INT
    (39) factor -> . BOOLEAN
    (40) factor -> . CHARCONST
    (41) factor -> . TEXT
    (42) factor -> . NULL
    (43) factor -> . LPAREN expression RPAREN
    (44) factor -> . designator
    (45) designator -> . IDENTIFIER
    (46) designator -> . designator DOT IDENTIFIER

    NUMBER          shift and go to state 13
    FLOAT           shift and go to state 14
    INT             shift and go to state 15
    BOOLEAN         shift and go to state 16
    CHARCONST       shift and go to state 17
    TEXT            shift and go to state 18
    NULL            shift and go to state 19
    LPAREN          shift and go to state 20
    IDENTIFIER      shift and go to state 33

    expression                     shift and go to state 41
    factor                         shift and go to state 32
    designator                     shift and go to state 21

state 30

    (3) newline_statement -> newline_statement NEWLINE .

    NEWLINE         reduce using rule 3 (newline_statement -> newline_statement NEWLINE .)
    IDENTIFIER      reduce using rule 3 (newline_statement -> newline_statement NEWLINE .)
    NUMBER          reduce using rule 3 (newline_statement -> newline_statement NEWLINE .)
    FLOAT           reduce using rule 3 (newline_statement -> newline_statement NEWLINE .)
    INT             reduce using rule 3 (newline_statement -> newline_statement NEWLINE .)
    BOOLEAN         reduce using rule 3 (newline_statement -> newline_statement NEWLINE .)
    CHARCONST       reduce using rule 3 (newline_statement -> newline_statement NEWLINE .)
    TEXT            reduce using rule 3 (newline_statement -> newline_statement NEWLINE .)
    NULL            reduce using rule 3 (newline_statement -> newline_statement NEWLINE .)
    LPAREN          reduce using rule 3 (newline_statement -> newline_statement NEWLINE .)
    GET             reduce using rule 3 (newline_statement -> newline_statement NEWLINE .)
    SHOW            reduce using rule 3 (newline_statement -> newline_statement NEWLINE .)
    HAVING          reduce using rule 3 (newline_statement -> newline_statement NEWLINE .)
    FOR             reduce using rule 3 (newline_statement -> newline_statement NEWLINE .)
    $end            reduce using rule 3 (newline_statement -> newline_statement NEWLINE .)
    END             reduce using rule 3 (newline_statement -> newline_statement NEWLINE .)
    EITHER          reduce using rule 3 (newline_statement -> newline_statement NEWLINE .)


state 31

    (43) factor -> LPAREN expression . RPAREN
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . TIMES expression
    (25) expression -> expression . DIVIDE expression
    (26) expression -> expression . MOD expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NEQ expression
    (29) expression -> expression . GT expression
    (30) expression -> expression . GTE expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . LTE expression
    (33) expression -> expression . EQUALS expression
    (34) expression -> expression . OR expression

    RPAREN          shift and go to state 42
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    MOD             shift and go to state 47
    EQ              shift and go to state 48
    NEQ             shift and go to state 49
    GT              shift and go to state 50
    GTE             shift and go to state 51
    LT              shift and go to state 52
    LTE             shift and go to state 53
    EQUALS          shift and go to state 54
    OR              shift and go to state 55


state 32

    (35) expression -> factor .

    RPAREN          reduce using rule 35 (expression -> factor .)
    PLUS            reduce using rule 35 (expression -> factor .)
    MINUS           reduce using rule 35 (expression -> factor .)
    TIMES           reduce using rule 35 (expression -> factor .)
    DIVIDE          reduce using rule 35 (expression -> factor .)
    MOD             reduce using rule 35 (expression -> factor .)
    EQ              reduce using rule 35 (expression -> factor .)
    NEQ             reduce using rule 35 (expression -> factor .)
    GT              reduce using rule 35 (expression -> factor .)
    GTE             reduce using rule 35 (expression -> factor .)
    LT              reduce using rule 35 (expression -> factor .)
    LTE             reduce using rule 35 (expression -> factor .)
    EQUALS          reduce using rule 35 (expression -> factor .)
    OR              reduce using rule 35 (expression -> factor .)
    SEMICOLON       reduce using rule 35 (expression -> factor .)
    DO              reduce using rule 35 (expression -> factor .)


state 33

    (45) designator -> IDENTIFIER .

    DOT             reduce using rule 45 (designator -> IDENTIFIER .)
    RPAREN          reduce using rule 45 (designator -> IDENTIFIER .)
    PLUS            reduce using rule 45 (designator -> IDENTIFIER .)
    MINUS           reduce using rule 45 (designator -> IDENTIFIER .)
    TIMES           reduce using rule 45 (designator -> IDENTIFIER .)
    DIVIDE          reduce using rule 45 (designator -> IDENTIFIER .)
    MOD             reduce using rule 45 (designator -> IDENTIFIER .)
    EQ              reduce using rule 45 (designator -> IDENTIFIER .)
    NEQ             reduce using rule 45 (designator -> IDENTIFIER .)
    GT              reduce using rule 45 (designator -> IDENTIFIER .)
    GTE             reduce using rule 45 (designator -> IDENTIFIER .)
    LT              reduce using rule 45 (designator -> IDENTIFIER .)
    LTE             reduce using rule 45 (designator -> IDENTIFIER .)
    EQUALS          reduce using rule 45 (designator -> IDENTIFIER .)
    OR              reduce using rule 45 (designator -> IDENTIFIER .)
    COLON           reduce using rule 45 (designator -> IDENTIFIER .)
    SEMICOLON       reduce using rule 45 (designator -> IDENTIFIER .)
    DO              reduce using rule 45 (designator -> IDENTIFIER .)


state 34

    (46) designator -> designator DOT . IDENTIFIER

    IDENTIFIER      shift and go to state 56


state 35

    (16) read_statement -> GET factor . COLON IDENTIFIER BY expression SEMICOLON

    COLON           shift and go to state 57


state 36

    (15) print_statement -> SHOW expression . SEMICOLON
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . TIMES expression
    (25) expression -> expression . DIVIDE expression
    (26) expression -> expression . MOD expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NEQ expression
    (29) expression -> expression . GT expression
    (30) expression -> expression . GTE expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . LTE expression
    (33) expression -> expression . EQUALS expression
    (34) expression -> expression . OR expression

    SEMICOLON       shift and go to state 58
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    MOD             shift and go to state 47
    EQ              shift and go to state 48
    NEQ             shift and go to state 49
    GT              shift and go to state 50
    GTE             shift and go to state 51
    LT              shift and go to state 52
    LTE             shift and go to state 53
    EQUALS          shift and go to state 54
    OR              shift and go to state 55


state 37

    (17) if_statement -> HAVING condition . DO declaration_list END
    (18) if_statement -> HAVING condition . DO declaration_list EITHER declaration_list END
    (19) if_statement -> HAVING condition . DO declaration_list EITHER condition DO declaration_list END

    DO              shift and go to state 59


state 38

    (20) condition -> expression .
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . TIMES expression
    (25) expression -> expression . DIVIDE expression
    (26) expression -> expression . MOD expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NEQ expression
    (29) expression -> expression . GT expression
    (30) expression -> expression . GTE expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . LTE expression
    (33) expression -> expression . EQUALS expression
    (34) expression -> expression . OR expression

    DO              reduce using rule 20 (condition -> expression .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    MOD             shift and go to state 47
    EQ              shift and go to state 48
    NEQ             shift and go to state 49
    GT              shift and go to state 50
    GTE             shift and go to state 51
    LT              shift and go to state 52
    LTE             shift and go to state 53
    EQUALS          shift and go to state 54
    OR              shift and go to state 55


state 39

    (21) for_statement -> FOR IDENTIFIER . IN RANGE expression DO NEWLINE declaration_list END

    IN              shift and go to state 60


state 40

    (8) variable_declaration -> factor COLON IDENTIFIER . EQUALS expression SEMICOLON

    EQUALS          shift and go to state 61


state 41

    (9) variable_declaration -> IDENTIFIER EQUALS expression . SEMICOLON
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . TIMES expression
    (25) expression -> expression . DIVIDE expression
    (26) expression -> expression . MOD expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NEQ expression
    (29) expression -> expression . GT expression
    (30) expression -> expression . GTE expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . LTE expression
    (33) expression -> expression . EQUALS expression
    (34) expression -> expression . OR expression

    SEMICOLON       shift and go to state 62
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    MOD             shift and go to state 47
    EQ              shift and go to state 48
    NEQ             shift and go to state 49
    GT              shift and go to state 50
    GTE             shift and go to state 51
    LT              shift and go to state 52
    LTE             shift and go to state 53
    EQUALS          shift and go to state 54
    OR              shift and go to state 55


state 42

    (43) factor -> LPAREN expression RPAREN .

    COLON           reduce using rule 43 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 43 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 43 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 43 (factor -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 43 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 43 (factor -> LPAREN expression RPAREN .)
    MOD             reduce using rule 43 (factor -> LPAREN expression RPAREN .)
    EQ              reduce using rule 43 (factor -> LPAREN expression RPAREN .)
    NEQ             reduce using rule 43 (factor -> LPAREN expression RPAREN .)
    GT              reduce using rule 43 (factor -> LPAREN expression RPAREN .)
    GTE             reduce using rule 43 (factor -> LPAREN expression RPAREN .)
    LT              reduce using rule 43 (factor -> LPAREN expression RPAREN .)
    LTE             reduce using rule 43 (factor -> LPAREN expression RPAREN .)
    EQUALS          reduce using rule 43 (factor -> LPAREN expression RPAREN .)
    OR              reduce using rule 43 (factor -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 43 (factor -> LPAREN expression RPAREN .)
    DO              reduce using rule 43 (factor -> LPAREN expression RPAREN .)


state 43

    (22) expression -> expression PLUS . expression
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression TIMES expression
    (25) expression -> . expression DIVIDE expression
    (26) expression -> . expression MOD expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NEQ expression
    (29) expression -> . expression GT expression
    (30) expression -> . expression GTE expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression LTE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . expression OR expression
    (35) expression -> . factor
    (36) factor -> . NUMBER
    (37) factor -> . FLOAT
    (38) factor -> . INT
    (39) factor -> . BOOLEAN
    (40) factor -> . CHARCONST
    (41) factor -> . TEXT
    (42) factor -> . NULL
    (43) factor -> . LPAREN expression RPAREN
    (44) factor -> . designator
    (45) designator -> . IDENTIFIER
    (46) designator -> . designator DOT IDENTIFIER

    NUMBER          shift and go to state 13
    FLOAT           shift and go to state 14
    INT             shift and go to state 15
    BOOLEAN         shift and go to state 16
    CHARCONST       shift and go to state 17
    TEXT            shift and go to state 18
    NULL            shift and go to state 19
    LPAREN          shift and go to state 20
    IDENTIFIER      shift and go to state 33

    expression                     shift and go to state 63
    factor                         shift and go to state 32
    designator                     shift and go to state 21

state 44

    (23) expression -> expression MINUS . expression
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression TIMES expression
    (25) expression -> . expression DIVIDE expression
    (26) expression -> . expression MOD expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NEQ expression
    (29) expression -> . expression GT expression
    (30) expression -> . expression GTE expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression LTE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . expression OR expression
    (35) expression -> . factor
    (36) factor -> . NUMBER
    (37) factor -> . FLOAT
    (38) factor -> . INT
    (39) factor -> . BOOLEAN
    (40) factor -> . CHARCONST
    (41) factor -> . TEXT
    (42) factor -> . NULL
    (43) factor -> . LPAREN expression RPAREN
    (44) factor -> . designator
    (45) designator -> . IDENTIFIER
    (46) designator -> . designator DOT IDENTIFIER

    NUMBER          shift and go to state 13
    FLOAT           shift and go to state 14
    INT             shift and go to state 15
    BOOLEAN         shift and go to state 16
    CHARCONST       shift and go to state 17
    TEXT            shift and go to state 18
    NULL            shift and go to state 19
    LPAREN          shift and go to state 20
    IDENTIFIER      shift and go to state 33

    expression                     shift and go to state 64
    factor                         shift and go to state 32
    designator                     shift and go to state 21

state 45

    (24) expression -> expression TIMES . expression
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression TIMES expression
    (25) expression -> . expression DIVIDE expression
    (26) expression -> . expression MOD expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NEQ expression
    (29) expression -> . expression GT expression
    (30) expression -> . expression GTE expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression LTE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . expression OR expression
    (35) expression -> . factor
    (36) factor -> . NUMBER
    (37) factor -> . FLOAT
    (38) factor -> . INT
    (39) factor -> . BOOLEAN
    (40) factor -> . CHARCONST
    (41) factor -> . TEXT
    (42) factor -> . NULL
    (43) factor -> . LPAREN expression RPAREN
    (44) factor -> . designator
    (45) designator -> . IDENTIFIER
    (46) designator -> . designator DOT IDENTIFIER

    NUMBER          shift and go to state 13
    FLOAT           shift and go to state 14
    INT             shift and go to state 15
    BOOLEAN         shift and go to state 16
    CHARCONST       shift and go to state 17
    TEXT            shift and go to state 18
    NULL            shift and go to state 19
    LPAREN          shift and go to state 20
    IDENTIFIER      shift and go to state 33

    expression                     shift and go to state 65
    factor                         shift and go to state 32
    designator                     shift and go to state 21

state 46

    (25) expression -> expression DIVIDE . expression
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression TIMES expression
    (25) expression -> . expression DIVIDE expression
    (26) expression -> . expression MOD expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NEQ expression
    (29) expression -> . expression GT expression
    (30) expression -> . expression GTE expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression LTE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . expression OR expression
    (35) expression -> . factor
    (36) factor -> . NUMBER
    (37) factor -> . FLOAT
    (38) factor -> . INT
    (39) factor -> . BOOLEAN
    (40) factor -> . CHARCONST
    (41) factor -> . TEXT
    (42) factor -> . NULL
    (43) factor -> . LPAREN expression RPAREN
    (44) factor -> . designator
    (45) designator -> . IDENTIFIER
    (46) designator -> . designator DOT IDENTIFIER

    NUMBER          shift and go to state 13
    FLOAT           shift and go to state 14
    INT             shift and go to state 15
    BOOLEAN         shift and go to state 16
    CHARCONST       shift and go to state 17
    TEXT            shift and go to state 18
    NULL            shift and go to state 19
    LPAREN          shift and go to state 20
    IDENTIFIER      shift and go to state 33

    expression                     shift and go to state 66
    factor                         shift and go to state 32
    designator                     shift and go to state 21

state 47

    (26) expression -> expression MOD . expression
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression TIMES expression
    (25) expression -> . expression DIVIDE expression
    (26) expression -> . expression MOD expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NEQ expression
    (29) expression -> . expression GT expression
    (30) expression -> . expression GTE expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression LTE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . expression OR expression
    (35) expression -> . factor
    (36) factor -> . NUMBER
    (37) factor -> . FLOAT
    (38) factor -> . INT
    (39) factor -> . BOOLEAN
    (40) factor -> . CHARCONST
    (41) factor -> . TEXT
    (42) factor -> . NULL
    (43) factor -> . LPAREN expression RPAREN
    (44) factor -> . designator
    (45) designator -> . IDENTIFIER
    (46) designator -> . designator DOT IDENTIFIER

    NUMBER          shift and go to state 13
    FLOAT           shift and go to state 14
    INT             shift and go to state 15
    BOOLEAN         shift and go to state 16
    CHARCONST       shift and go to state 17
    TEXT            shift and go to state 18
    NULL            shift and go to state 19
    LPAREN          shift and go to state 20
    IDENTIFIER      shift and go to state 33

    expression                     shift and go to state 67
    factor                         shift and go to state 32
    designator                     shift and go to state 21

state 48

    (27) expression -> expression EQ . expression
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression TIMES expression
    (25) expression -> . expression DIVIDE expression
    (26) expression -> . expression MOD expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NEQ expression
    (29) expression -> . expression GT expression
    (30) expression -> . expression GTE expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression LTE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . expression OR expression
    (35) expression -> . factor
    (36) factor -> . NUMBER
    (37) factor -> . FLOAT
    (38) factor -> . INT
    (39) factor -> . BOOLEAN
    (40) factor -> . CHARCONST
    (41) factor -> . TEXT
    (42) factor -> . NULL
    (43) factor -> . LPAREN expression RPAREN
    (44) factor -> . designator
    (45) designator -> . IDENTIFIER
    (46) designator -> . designator DOT IDENTIFIER

    NUMBER          shift and go to state 13
    FLOAT           shift and go to state 14
    INT             shift and go to state 15
    BOOLEAN         shift and go to state 16
    CHARCONST       shift and go to state 17
    TEXT            shift and go to state 18
    NULL            shift and go to state 19
    LPAREN          shift and go to state 20
    IDENTIFIER      shift and go to state 33

    expression                     shift and go to state 68
    factor                         shift and go to state 32
    designator                     shift and go to state 21

state 49

    (28) expression -> expression NEQ . expression
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression TIMES expression
    (25) expression -> . expression DIVIDE expression
    (26) expression -> . expression MOD expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NEQ expression
    (29) expression -> . expression GT expression
    (30) expression -> . expression GTE expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression LTE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . expression OR expression
    (35) expression -> . factor
    (36) factor -> . NUMBER
    (37) factor -> . FLOAT
    (38) factor -> . INT
    (39) factor -> . BOOLEAN
    (40) factor -> . CHARCONST
    (41) factor -> . TEXT
    (42) factor -> . NULL
    (43) factor -> . LPAREN expression RPAREN
    (44) factor -> . designator
    (45) designator -> . IDENTIFIER
    (46) designator -> . designator DOT IDENTIFIER

    NUMBER          shift and go to state 13
    FLOAT           shift and go to state 14
    INT             shift and go to state 15
    BOOLEAN         shift and go to state 16
    CHARCONST       shift and go to state 17
    TEXT            shift and go to state 18
    NULL            shift and go to state 19
    LPAREN          shift and go to state 20
    IDENTIFIER      shift and go to state 33

    expression                     shift and go to state 69
    factor                         shift and go to state 32
    designator                     shift and go to state 21

state 50

    (29) expression -> expression GT . expression
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression TIMES expression
    (25) expression -> . expression DIVIDE expression
    (26) expression -> . expression MOD expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NEQ expression
    (29) expression -> . expression GT expression
    (30) expression -> . expression GTE expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression LTE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . expression OR expression
    (35) expression -> . factor
    (36) factor -> . NUMBER
    (37) factor -> . FLOAT
    (38) factor -> . INT
    (39) factor -> . BOOLEAN
    (40) factor -> . CHARCONST
    (41) factor -> . TEXT
    (42) factor -> . NULL
    (43) factor -> . LPAREN expression RPAREN
    (44) factor -> . designator
    (45) designator -> . IDENTIFIER
    (46) designator -> . designator DOT IDENTIFIER

    NUMBER          shift and go to state 13
    FLOAT           shift and go to state 14
    INT             shift and go to state 15
    BOOLEAN         shift and go to state 16
    CHARCONST       shift and go to state 17
    TEXT            shift and go to state 18
    NULL            shift and go to state 19
    LPAREN          shift and go to state 20
    IDENTIFIER      shift and go to state 33

    expression                     shift and go to state 70
    factor                         shift and go to state 32
    designator                     shift and go to state 21

state 51

    (30) expression -> expression GTE . expression
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression TIMES expression
    (25) expression -> . expression DIVIDE expression
    (26) expression -> . expression MOD expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NEQ expression
    (29) expression -> . expression GT expression
    (30) expression -> . expression GTE expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression LTE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . expression OR expression
    (35) expression -> . factor
    (36) factor -> . NUMBER
    (37) factor -> . FLOAT
    (38) factor -> . INT
    (39) factor -> . BOOLEAN
    (40) factor -> . CHARCONST
    (41) factor -> . TEXT
    (42) factor -> . NULL
    (43) factor -> . LPAREN expression RPAREN
    (44) factor -> . designator
    (45) designator -> . IDENTIFIER
    (46) designator -> . designator DOT IDENTIFIER

    NUMBER          shift and go to state 13
    FLOAT           shift and go to state 14
    INT             shift and go to state 15
    BOOLEAN         shift and go to state 16
    CHARCONST       shift and go to state 17
    TEXT            shift and go to state 18
    NULL            shift and go to state 19
    LPAREN          shift and go to state 20
    IDENTIFIER      shift and go to state 33

    expression                     shift and go to state 71
    factor                         shift and go to state 32
    designator                     shift and go to state 21

state 52

    (31) expression -> expression LT . expression
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression TIMES expression
    (25) expression -> . expression DIVIDE expression
    (26) expression -> . expression MOD expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NEQ expression
    (29) expression -> . expression GT expression
    (30) expression -> . expression GTE expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression LTE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . expression OR expression
    (35) expression -> . factor
    (36) factor -> . NUMBER
    (37) factor -> . FLOAT
    (38) factor -> . INT
    (39) factor -> . BOOLEAN
    (40) factor -> . CHARCONST
    (41) factor -> . TEXT
    (42) factor -> . NULL
    (43) factor -> . LPAREN expression RPAREN
    (44) factor -> . designator
    (45) designator -> . IDENTIFIER
    (46) designator -> . designator DOT IDENTIFIER

    NUMBER          shift and go to state 13
    FLOAT           shift and go to state 14
    INT             shift and go to state 15
    BOOLEAN         shift and go to state 16
    CHARCONST       shift and go to state 17
    TEXT            shift and go to state 18
    NULL            shift and go to state 19
    LPAREN          shift and go to state 20
    IDENTIFIER      shift and go to state 33

    expression                     shift and go to state 72
    factor                         shift and go to state 32
    designator                     shift and go to state 21

state 53

    (32) expression -> expression LTE . expression
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression TIMES expression
    (25) expression -> . expression DIVIDE expression
    (26) expression -> . expression MOD expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NEQ expression
    (29) expression -> . expression GT expression
    (30) expression -> . expression GTE expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression LTE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . expression OR expression
    (35) expression -> . factor
    (36) factor -> . NUMBER
    (37) factor -> . FLOAT
    (38) factor -> . INT
    (39) factor -> . BOOLEAN
    (40) factor -> . CHARCONST
    (41) factor -> . TEXT
    (42) factor -> . NULL
    (43) factor -> . LPAREN expression RPAREN
    (44) factor -> . designator
    (45) designator -> . IDENTIFIER
    (46) designator -> . designator DOT IDENTIFIER

    NUMBER          shift and go to state 13
    FLOAT           shift and go to state 14
    INT             shift and go to state 15
    BOOLEAN         shift and go to state 16
    CHARCONST       shift and go to state 17
    TEXT            shift and go to state 18
    NULL            shift and go to state 19
    LPAREN          shift and go to state 20
    IDENTIFIER      shift and go to state 33

    expression                     shift and go to state 73
    factor                         shift and go to state 32
    designator                     shift and go to state 21

state 54

    (33) expression -> expression EQUALS . expression
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression TIMES expression
    (25) expression -> . expression DIVIDE expression
    (26) expression -> . expression MOD expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NEQ expression
    (29) expression -> . expression GT expression
    (30) expression -> . expression GTE expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression LTE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . expression OR expression
    (35) expression -> . factor
    (36) factor -> . NUMBER
    (37) factor -> . FLOAT
    (38) factor -> . INT
    (39) factor -> . BOOLEAN
    (40) factor -> . CHARCONST
    (41) factor -> . TEXT
    (42) factor -> . NULL
    (43) factor -> . LPAREN expression RPAREN
    (44) factor -> . designator
    (45) designator -> . IDENTIFIER
    (46) designator -> . designator DOT IDENTIFIER

    NUMBER          shift and go to state 13
    FLOAT           shift and go to state 14
    INT             shift and go to state 15
    BOOLEAN         shift and go to state 16
    CHARCONST       shift and go to state 17
    TEXT            shift and go to state 18
    NULL            shift and go to state 19
    LPAREN          shift and go to state 20
    IDENTIFIER      shift and go to state 33

    expression                     shift and go to state 74
    factor                         shift and go to state 32
    designator                     shift and go to state 21

state 55

    (34) expression -> expression OR . expression
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression TIMES expression
    (25) expression -> . expression DIVIDE expression
    (26) expression -> . expression MOD expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NEQ expression
    (29) expression -> . expression GT expression
    (30) expression -> . expression GTE expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression LTE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . expression OR expression
    (35) expression -> . factor
    (36) factor -> . NUMBER
    (37) factor -> . FLOAT
    (38) factor -> . INT
    (39) factor -> . BOOLEAN
    (40) factor -> . CHARCONST
    (41) factor -> . TEXT
    (42) factor -> . NULL
    (43) factor -> . LPAREN expression RPAREN
    (44) factor -> . designator
    (45) designator -> . IDENTIFIER
    (46) designator -> . designator DOT IDENTIFIER

    NUMBER          shift and go to state 13
    FLOAT           shift and go to state 14
    INT             shift and go to state 15
    BOOLEAN         shift and go to state 16
    CHARCONST       shift and go to state 17
    TEXT            shift and go to state 18
    NULL            shift and go to state 19
    LPAREN          shift and go to state 20
    IDENTIFIER      shift and go to state 33

    expression                     shift and go to state 75
    factor                         shift and go to state 32
    designator                     shift and go to state 21

state 56

    (46) designator -> designator DOT IDENTIFIER .

    DOT             reduce using rule 46 (designator -> designator DOT IDENTIFIER .)
    COLON           reduce using rule 46 (designator -> designator DOT IDENTIFIER .)
    RPAREN          reduce using rule 46 (designator -> designator DOT IDENTIFIER .)
    PLUS            reduce using rule 46 (designator -> designator DOT IDENTIFIER .)
    MINUS           reduce using rule 46 (designator -> designator DOT IDENTIFIER .)
    TIMES           reduce using rule 46 (designator -> designator DOT IDENTIFIER .)
    DIVIDE          reduce using rule 46 (designator -> designator DOT IDENTIFIER .)
    MOD             reduce using rule 46 (designator -> designator DOT IDENTIFIER .)
    EQ              reduce using rule 46 (designator -> designator DOT IDENTIFIER .)
    NEQ             reduce using rule 46 (designator -> designator DOT IDENTIFIER .)
    GT              reduce using rule 46 (designator -> designator DOT IDENTIFIER .)
    GTE             reduce using rule 46 (designator -> designator DOT IDENTIFIER .)
    LT              reduce using rule 46 (designator -> designator DOT IDENTIFIER .)
    LTE             reduce using rule 46 (designator -> designator DOT IDENTIFIER .)
    EQUALS          reduce using rule 46 (designator -> designator DOT IDENTIFIER .)
    OR              reduce using rule 46 (designator -> designator DOT IDENTIFIER .)
    SEMICOLON       reduce using rule 46 (designator -> designator DOT IDENTIFIER .)
    DO              reduce using rule 46 (designator -> designator DOT IDENTIFIER .)


state 57

    (16) read_statement -> GET factor COLON . IDENTIFIER BY expression SEMICOLON

    IDENTIFIER      shift and go to state 76


state 58

    (15) print_statement -> SHOW expression SEMICOLON .

    IDENTIFIER      reduce using rule 15 (print_statement -> SHOW expression SEMICOLON .)
    NUMBER          reduce using rule 15 (print_statement -> SHOW expression SEMICOLON .)
    FLOAT           reduce using rule 15 (print_statement -> SHOW expression SEMICOLON .)
    INT             reduce using rule 15 (print_statement -> SHOW expression SEMICOLON .)
    BOOLEAN         reduce using rule 15 (print_statement -> SHOW expression SEMICOLON .)
    CHARCONST       reduce using rule 15 (print_statement -> SHOW expression SEMICOLON .)
    TEXT            reduce using rule 15 (print_statement -> SHOW expression SEMICOLON .)
    NULL            reduce using rule 15 (print_statement -> SHOW expression SEMICOLON .)
    LPAREN          reduce using rule 15 (print_statement -> SHOW expression SEMICOLON .)
    GET             reduce using rule 15 (print_statement -> SHOW expression SEMICOLON .)
    SHOW            reduce using rule 15 (print_statement -> SHOW expression SEMICOLON .)
    HAVING          reduce using rule 15 (print_statement -> SHOW expression SEMICOLON .)
    FOR             reduce using rule 15 (print_statement -> SHOW expression SEMICOLON .)
    NEWLINE         reduce using rule 15 (print_statement -> SHOW expression SEMICOLON .)
    $end            reduce using rule 15 (print_statement -> SHOW expression SEMICOLON .)
    END             reduce using rule 15 (print_statement -> SHOW expression SEMICOLON .)
    EITHER          reduce using rule 15 (print_statement -> SHOW expression SEMICOLON .)


state 59

    (17) if_statement -> HAVING condition DO . declaration_list END
    (18) if_statement -> HAVING condition DO . declaration_list EITHER declaration_list END
    (19) if_statement -> HAVING condition DO . declaration_list EITHER condition DO declaration_list END
    (4) declaration_list -> . declaration_list declaration
    (5) declaration_list -> . declaration
    (6) declaration -> . variable_declaration
    (7) declaration -> . statement
    (8) variable_declaration -> . factor COLON IDENTIFIER EQUALS expression SEMICOLON
    (9) variable_declaration -> . IDENTIFIER EQUALS expression SEMICOLON
    (10) statement -> . read_statement
    (11) statement -> . print_statement
    (12) statement -> . if_statement
    (13) statement -> . for_statement
    (14) statement -> . newline_statement
    (36) factor -> . NUMBER
    (37) factor -> . FLOAT
    (38) factor -> . INT
    (39) factor -> . BOOLEAN
    (40) factor -> . CHARCONST
    (41) factor -> . TEXT
    (42) factor -> . NULL
    (43) factor -> . LPAREN expression RPAREN
    (44) factor -> . designator
    (16) read_statement -> . GET factor COLON IDENTIFIER BY expression SEMICOLON
    (15) print_statement -> . SHOW expression SEMICOLON
    (17) if_statement -> . HAVING condition DO declaration_list END
    (18) if_statement -> . HAVING condition DO declaration_list EITHER declaration_list END
    (19) if_statement -> . HAVING condition DO declaration_list EITHER condition DO declaration_list END
    (21) for_statement -> . FOR IDENTIFIER IN RANGE expression DO NEWLINE declaration_list END
    (2) newline_statement -> . NEWLINE
    (3) newline_statement -> . newline_statement NEWLINE
    (45) designator -> . IDENTIFIER
    (46) designator -> . designator DOT IDENTIFIER

    IDENTIFIER      shift and go to state 7
    NUMBER          shift and go to state 13
    FLOAT           shift and go to state 14
    INT             shift and go to state 15
    BOOLEAN         shift and go to state 16
    CHARCONST       shift and go to state 17
    TEXT            shift and go to state 18
    NULL            shift and go to state 19
    LPAREN          shift and go to state 20
    GET             shift and go to state 22
    SHOW            shift and go to state 23
    HAVING          shift and go to state 24
    FOR             shift and go to state 25
    NEWLINE         shift and go to state 26

    declaration_list               shift and go to state 77
    declaration                    shift and go to state 3
    variable_declaration           shift and go to state 4
    statement                      shift and go to state 5
    factor                         shift and go to state 6
    read_statement                 shift and go to state 8
    print_statement                shift and go to state 9
    if_statement                   shift and go to state 10
    for_statement                  shift and go to state 11
    newline_statement              shift and go to state 12
    designator                     shift and go to state 21

state 60

    (21) for_statement -> FOR IDENTIFIER IN . RANGE expression DO NEWLINE declaration_list END

    RANGE           shift and go to state 78


state 61

    (8) variable_declaration -> factor COLON IDENTIFIER EQUALS . expression SEMICOLON
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression TIMES expression
    (25) expression -> . expression DIVIDE expression
    (26) expression -> . expression MOD expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NEQ expression
    (29) expression -> . expression GT expression
    (30) expression -> . expression GTE expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression LTE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . expression OR expression
    (35) expression -> . factor
    (36) factor -> . NUMBER
    (37) factor -> . FLOAT
    (38) factor -> . INT
    (39) factor -> . BOOLEAN
    (40) factor -> . CHARCONST
    (41) factor -> . TEXT
    (42) factor -> . NULL
    (43) factor -> . LPAREN expression RPAREN
    (44) factor -> . designator
    (45) designator -> . IDENTIFIER
    (46) designator -> . designator DOT IDENTIFIER

    NUMBER          shift and go to state 13
    FLOAT           shift and go to state 14
    INT             shift and go to state 15
    BOOLEAN         shift and go to state 16
    CHARCONST       shift and go to state 17
    TEXT            shift and go to state 18
    NULL            shift and go to state 19
    LPAREN          shift and go to state 20
    IDENTIFIER      shift and go to state 33

    factor                         shift and go to state 32
    expression                     shift and go to state 79
    designator                     shift and go to state 21

state 62

    (9) variable_declaration -> IDENTIFIER EQUALS expression SEMICOLON .

    IDENTIFIER      reduce using rule 9 (variable_declaration -> IDENTIFIER EQUALS expression SEMICOLON .)
    NUMBER          reduce using rule 9 (variable_declaration -> IDENTIFIER EQUALS expression SEMICOLON .)
    FLOAT           reduce using rule 9 (variable_declaration -> IDENTIFIER EQUALS expression SEMICOLON .)
    INT             reduce using rule 9 (variable_declaration -> IDENTIFIER EQUALS expression SEMICOLON .)
    BOOLEAN         reduce using rule 9 (variable_declaration -> IDENTIFIER EQUALS expression SEMICOLON .)
    CHARCONST       reduce using rule 9 (variable_declaration -> IDENTIFIER EQUALS expression SEMICOLON .)
    TEXT            reduce using rule 9 (variable_declaration -> IDENTIFIER EQUALS expression SEMICOLON .)
    NULL            reduce using rule 9 (variable_declaration -> IDENTIFIER EQUALS expression SEMICOLON .)
    LPAREN          reduce using rule 9 (variable_declaration -> IDENTIFIER EQUALS expression SEMICOLON .)
    GET             reduce using rule 9 (variable_declaration -> IDENTIFIER EQUALS expression SEMICOLON .)
    SHOW            reduce using rule 9 (variable_declaration -> IDENTIFIER EQUALS expression SEMICOLON .)
    HAVING          reduce using rule 9 (variable_declaration -> IDENTIFIER EQUALS expression SEMICOLON .)
    FOR             reduce using rule 9 (variable_declaration -> IDENTIFIER EQUALS expression SEMICOLON .)
    NEWLINE         reduce using rule 9 (variable_declaration -> IDENTIFIER EQUALS expression SEMICOLON .)
    $end            reduce using rule 9 (variable_declaration -> IDENTIFIER EQUALS expression SEMICOLON .)
    END             reduce using rule 9 (variable_declaration -> IDENTIFIER EQUALS expression SEMICOLON .)
    EITHER          reduce using rule 9 (variable_declaration -> IDENTIFIER EQUALS expression SEMICOLON .)


state 63

    (22) expression -> expression PLUS expression .
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . TIMES expression
    (25) expression -> expression . DIVIDE expression
    (26) expression -> expression . MOD expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NEQ expression
    (29) expression -> expression . GT expression
    (30) expression -> expression . GTE expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . LTE expression
    (33) expression -> expression . EQUALS expression
    (34) expression -> expression . OR expression

    RPAREN          reduce using rule 22 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 22 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 22 (expression -> expression PLUS expression .)
    EQ              reduce using rule 22 (expression -> expression PLUS expression .)
    NEQ             reduce using rule 22 (expression -> expression PLUS expression .)
    GT              reduce using rule 22 (expression -> expression PLUS expression .)
    GTE             reduce using rule 22 (expression -> expression PLUS expression .)
    LT              reduce using rule 22 (expression -> expression PLUS expression .)
    LTE             reduce using rule 22 (expression -> expression PLUS expression .)
    OR              reduce using rule 22 (expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 22 (expression -> expression PLUS expression .)
    DO              reduce using rule 22 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    MOD             shift and go to state 47
    EQUALS          shift and go to state 54

  ! TIMES           [ reduce using rule 22 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 22 (expression -> expression PLUS expression .) ]
  ! MOD             [ reduce using rule 22 (expression -> expression PLUS expression .) ]
  ! EQUALS          [ reduce using rule 22 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 43 ]
  ! MINUS           [ shift and go to state 44 ]
  ! EQ              [ shift and go to state 48 ]
  ! NEQ             [ shift and go to state 49 ]
  ! GT              [ shift and go to state 50 ]
  ! GTE             [ shift and go to state 51 ]
  ! LT              [ shift and go to state 52 ]
  ! LTE             [ shift and go to state 53 ]
  ! OR              [ shift and go to state 55 ]


state 64

    (23) expression -> expression MINUS expression .
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . TIMES expression
    (25) expression -> expression . DIVIDE expression
    (26) expression -> expression . MOD expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NEQ expression
    (29) expression -> expression . GT expression
    (30) expression -> expression . GTE expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . LTE expression
    (33) expression -> expression . EQUALS expression
    (34) expression -> expression . OR expression

    RPAREN          reduce using rule 23 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 23 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 23 (expression -> expression MINUS expression .)
    EQ              reduce using rule 23 (expression -> expression MINUS expression .)
    NEQ             reduce using rule 23 (expression -> expression MINUS expression .)
    GT              reduce using rule 23 (expression -> expression MINUS expression .)
    GTE             reduce using rule 23 (expression -> expression MINUS expression .)
    LT              reduce using rule 23 (expression -> expression MINUS expression .)
    LTE             reduce using rule 23 (expression -> expression MINUS expression .)
    OR              reduce using rule 23 (expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 23 (expression -> expression MINUS expression .)
    DO              reduce using rule 23 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    MOD             shift and go to state 47
    EQUALS          shift and go to state 54

  ! TIMES           [ reduce using rule 23 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 23 (expression -> expression MINUS expression .) ]
  ! MOD             [ reduce using rule 23 (expression -> expression MINUS expression .) ]
  ! EQUALS          [ reduce using rule 23 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 43 ]
  ! MINUS           [ shift and go to state 44 ]
  ! EQ              [ shift and go to state 48 ]
  ! NEQ             [ shift and go to state 49 ]
  ! GT              [ shift and go to state 50 ]
  ! GTE             [ shift and go to state 51 ]
  ! LT              [ shift and go to state 52 ]
  ! LTE             [ shift and go to state 53 ]
  ! OR              [ shift and go to state 55 ]


state 65

    (24) expression -> expression TIMES expression .
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . TIMES expression
    (25) expression -> expression . DIVIDE expression
    (26) expression -> expression . MOD expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NEQ expression
    (29) expression -> expression . GT expression
    (30) expression -> expression . GTE expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . LTE expression
    (33) expression -> expression . EQUALS expression
    (34) expression -> expression . OR expression

    RPAREN          reduce using rule 24 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 24 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 24 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 24 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 24 (expression -> expression TIMES expression .)
    MOD             reduce using rule 24 (expression -> expression TIMES expression .)
    EQ              reduce using rule 24 (expression -> expression TIMES expression .)
    NEQ             reduce using rule 24 (expression -> expression TIMES expression .)
    GT              reduce using rule 24 (expression -> expression TIMES expression .)
    GTE             reduce using rule 24 (expression -> expression TIMES expression .)
    LT              reduce using rule 24 (expression -> expression TIMES expression .)
    LTE             reduce using rule 24 (expression -> expression TIMES expression .)
    OR              reduce using rule 24 (expression -> expression TIMES expression .)
    SEMICOLON       reduce using rule 24 (expression -> expression TIMES expression .)
    DO              reduce using rule 24 (expression -> expression TIMES expression .)
    EQUALS          shift and go to state 54

  ! EQUALS          [ reduce using rule 24 (expression -> expression TIMES expression .) ]
  ! PLUS            [ shift and go to state 43 ]
  ! MINUS           [ shift and go to state 44 ]
  ! TIMES           [ shift and go to state 45 ]
  ! DIVIDE          [ shift and go to state 46 ]
  ! MOD             [ shift and go to state 47 ]
  ! EQ              [ shift and go to state 48 ]
  ! NEQ             [ shift and go to state 49 ]
  ! GT              [ shift and go to state 50 ]
  ! GTE             [ shift and go to state 51 ]
  ! LT              [ shift and go to state 52 ]
  ! LTE             [ shift and go to state 53 ]
  ! OR              [ shift and go to state 55 ]


state 66

    (25) expression -> expression DIVIDE expression .
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . TIMES expression
    (25) expression -> expression . DIVIDE expression
    (26) expression -> expression . MOD expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NEQ expression
    (29) expression -> expression . GT expression
    (30) expression -> expression . GTE expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . LTE expression
    (33) expression -> expression . EQUALS expression
    (34) expression -> expression . OR expression

    RPAREN          reduce using rule 25 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 25 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 25 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 25 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 25 (expression -> expression DIVIDE expression .)
    MOD             reduce using rule 25 (expression -> expression DIVIDE expression .)
    EQ              reduce using rule 25 (expression -> expression DIVIDE expression .)
    NEQ             reduce using rule 25 (expression -> expression DIVIDE expression .)
    GT              reduce using rule 25 (expression -> expression DIVIDE expression .)
    GTE             reduce using rule 25 (expression -> expression DIVIDE expression .)
    LT              reduce using rule 25 (expression -> expression DIVIDE expression .)
    LTE             reduce using rule 25 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 25 (expression -> expression DIVIDE expression .)
    SEMICOLON       reduce using rule 25 (expression -> expression DIVIDE expression .)
    DO              reduce using rule 25 (expression -> expression DIVIDE expression .)
    EQUALS          shift and go to state 54

  ! EQUALS          [ reduce using rule 25 (expression -> expression DIVIDE expression .) ]
  ! PLUS            [ shift and go to state 43 ]
  ! MINUS           [ shift and go to state 44 ]
  ! TIMES           [ shift and go to state 45 ]
  ! DIVIDE          [ shift and go to state 46 ]
  ! MOD             [ shift and go to state 47 ]
  ! EQ              [ shift and go to state 48 ]
  ! NEQ             [ shift and go to state 49 ]
  ! GT              [ shift and go to state 50 ]
  ! GTE             [ shift and go to state 51 ]
  ! LT              [ shift and go to state 52 ]
  ! LTE             [ shift and go to state 53 ]
  ! OR              [ shift and go to state 55 ]


state 67

    (26) expression -> expression MOD expression .
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . TIMES expression
    (25) expression -> expression . DIVIDE expression
    (26) expression -> expression . MOD expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NEQ expression
    (29) expression -> expression . GT expression
    (30) expression -> expression . GTE expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . LTE expression
    (33) expression -> expression . EQUALS expression
    (34) expression -> expression . OR expression

    RPAREN          reduce using rule 26 (expression -> expression MOD expression .)
    PLUS            reduce using rule 26 (expression -> expression MOD expression .)
    MINUS           reduce using rule 26 (expression -> expression MOD expression .)
    TIMES           reduce using rule 26 (expression -> expression MOD expression .)
    DIVIDE          reduce using rule 26 (expression -> expression MOD expression .)
    MOD             reduce using rule 26 (expression -> expression MOD expression .)
    EQ              reduce using rule 26 (expression -> expression MOD expression .)
    NEQ             reduce using rule 26 (expression -> expression MOD expression .)
    GT              reduce using rule 26 (expression -> expression MOD expression .)
    GTE             reduce using rule 26 (expression -> expression MOD expression .)
    LT              reduce using rule 26 (expression -> expression MOD expression .)
    LTE             reduce using rule 26 (expression -> expression MOD expression .)
    OR              reduce using rule 26 (expression -> expression MOD expression .)
    SEMICOLON       reduce using rule 26 (expression -> expression MOD expression .)
    DO              reduce using rule 26 (expression -> expression MOD expression .)
    EQUALS          shift and go to state 54

  ! EQUALS          [ reduce using rule 26 (expression -> expression MOD expression .) ]
  ! PLUS            [ shift and go to state 43 ]
  ! MINUS           [ shift and go to state 44 ]
  ! TIMES           [ shift and go to state 45 ]
  ! DIVIDE          [ shift and go to state 46 ]
  ! MOD             [ shift and go to state 47 ]
  ! EQ              [ shift and go to state 48 ]
  ! NEQ             [ shift and go to state 49 ]
  ! GT              [ shift and go to state 50 ]
  ! GTE             [ shift and go to state 51 ]
  ! LT              [ shift and go to state 52 ]
  ! LTE             [ shift and go to state 53 ]
  ! OR              [ shift and go to state 55 ]


state 68

    (27) expression -> expression EQ expression .
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . TIMES expression
    (25) expression -> expression . DIVIDE expression
    (26) expression -> expression . MOD expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NEQ expression
    (29) expression -> expression . GT expression
    (30) expression -> expression . GTE expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . LTE expression
    (33) expression -> expression . EQUALS expression
    (34) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GTE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LTE resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    RPAREN          reduce using rule 27 (expression -> expression EQ expression .)
    SEMICOLON       reduce using rule 27 (expression -> expression EQ expression .)
    DO              reduce using rule 27 (expression -> expression EQ expression .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    MOD             shift and go to state 47
    EQ              shift and go to state 48
    NEQ             shift and go to state 49
    GT              shift and go to state 50
    GTE             shift and go to state 51
    LT              shift and go to state 52
    LTE             shift and go to state 53
    EQUALS          shift and go to state 54
    OR              shift and go to state 55

  ! PLUS            [ reduce using rule 27 (expression -> expression EQ expression .) ]
  ! MINUS           [ reduce using rule 27 (expression -> expression EQ expression .) ]
  ! TIMES           [ reduce using rule 27 (expression -> expression EQ expression .) ]
  ! DIVIDE          [ reduce using rule 27 (expression -> expression EQ expression .) ]
  ! MOD             [ reduce using rule 27 (expression -> expression EQ expression .) ]
  ! EQ              [ reduce using rule 27 (expression -> expression EQ expression .) ]
  ! NEQ             [ reduce using rule 27 (expression -> expression EQ expression .) ]
  ! GT              [ reduce using rule 27 (expression -> expression EQ expression .) ]
  ! GTE             [ reduce using rule 27 (expression -> expression EQ expression .) ]
  ! LT              [ reduce using rule 27 (expression -> expression EQ expression .) ]
  ! LTE             [ reduce using rule 27 (expression -> expression EQ expression .) ]
  ! EQUALS          [ reduce using rule 27 (expression -> expression EQ expression .) ]
  ! OR              [ reduce using rule 27 (expression -> expression EQ expression .) ]


state 69

    (28) expression -> expression NEQ expression .
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . TIMES expression
    (25) expression -> expression . DIVIDE expression
    (26) expression -> expression . MOD expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NEQ expression
    (29) expression -> expression . GT expression
    (30) expression -> expression . GTE expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . LTE expression
    (33) expression -> expression . EQUALS expression
    (34) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GTE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LTE resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    RPAREN          reduce using rule 28 (expression -> expression NEQ expression .)
    SEMICOLON       reduce using rule 28 (expression -> expression NEQ expression .)
    DO              reduce using rule 28 (expression -> expression NEQ expression .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    MOD             shift and go to state 47
    EQ              shift and go to state 48
    NEQ             shift and go to state 49
    GT              shift and go to state 50
    GTE             shift and go to state 51
    LT              shift and go to state 52
    LTE             shift and go to state 53
    EQUALS          shift and go to state 54
    OR              shift and go to state 55

  ! PLUS            [ reduce using rule 28 (expression -> expression NEQ expression .) ]
  ! MINUS           [ reduce using rule 28 (expression -> expression NEQ expression .) ]
  ! TIMES           [ reduce using rule 28 (expression -> expression NEQ expression .) ]
  ! DIVIDE          [ reduce using rule 28 (expression -> expression NEQ expression .) ]
  ! MOD             [ reduce using rule 28 (expression -> expression NEQ expression .) ]
  ! EQ              [ reduce using rule 28 (expression -> expression NEQ expression .) ]
  ! NEQ             [ reduce using rule 28 (expression -> expression NEQ expression .) ]
  ! GT              [ reduce using rule 28 (expression -> expression NEQ expression .) ]
  ! GTE             [ reduce using rule 28 (expression -> expression NEQ expression .) ]
  ! LT              [ reduce using rule 28 (expression -> expression NEQ expression .) ]
  ! LTE             [ reduce using rule 28 (expression -> expression NEQ expression .) ]
  ! EQUALS          [ reduce using rule 28 (expression -> expression NEQ expression .) ]
  ! OR              [ reduce using rule 28 (expression -> expression NEQ expression .) ]


state 70

    (29) expression -> expression GT expression .
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . TIMES expression
    (25) expression -> expression . DIVIDE expression
    (26) expression -> expression . MOD expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NEQ expression
    (29) expression -> expression . GT expression
    (30) expression -> expression . GTE expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . LTE expression
    (33) expression -> expression . EQUALS expression
    (34) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GTE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LTE resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    RPAREN          reduce using rule 29 (expression -> expression GT expression .)
    SEMICOLON       reduce using rule 29 (expression -> expression GT expression .)
    DO              reduce using rule 29 (expression -> expression GT expression .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    MOD             shift and go to state 47
    EQ              shift and go to state 48
    NEQ             shift and go to state 49
    GT              shift and go to state 50
    GTE             shift and go to state 51
    LT              shift and go to state 52
    LTE             shift and go to state 53
    EQUALS          shift and go to state 54
    OR              shift and go to state 55

  ! PLUS            [ reduce using rule 29 (expression -> expression GT expression .) ]
  ! MINUS           [ reduce using rule 29 (expression -> expression GT expression .) ]
  ! TIMES           [ reduce using rule 29 (expression -> expression GT expression .) ]
  ! DIVIDE          [ reduce using rule 29 (expression -> expression GT expression .) ]
  ! MOD             [ reduce using rule 29 (expression -> expression GT expression .) ]
  ! EQ              [ reduce using rule 29 (expression -> expression GT expression .) ]
  ! NEQ             [ reduce using rule 29 (expression -> expression GT expression .) ]
  ! GT              [ reduce using rule 29 (expression -> expression GT expression .) ]
  ! GTE             [ reduce using rule 29 (expression -> expression GT expression .) ]
  ! LT              [ reduce using rule 29 (expression -> expression GT expression .) ]
  ! LTE             [ reduce using rule 29 (expression -> expression GT expression .) ]
  ! EQUALS          [ reduce using rule 29 (expression -> expression GT expression .) ]
  ! OR              [ reduce using rule 29 (expression -> expression GT expression .) ]


state 71

    (30) expression -> expression GTE expression .
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . TIMES expression
    (25) expression -> expression . DIVIDE expression
    (26) expression -> expression . MOD expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NEQ expression
    (29) expression -> expression . GT expression
    (30) expression -> expression . GTE expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . LTE expression
    (33) expression -> expression . EQUALS expression
    (34) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GTE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LTE resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    RPAREN          reduce using rule 30 (expression -> expression GTE expression .)
    SEMICOLON       reduce using rule 30 (expression -> expression GTE expression .)
    DO              reduce using rule 30 (expression -> expression GTE expression .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    MOD             shift and go to state 47
    EQ              shift and go to state 48
    NEQ             shift and go to state 49
    GT              shift and go to state 50
    GTE             shift and go to state 51
    LT              shift and go to state 52
    LTE             shift and go to state 53
    EQUALS          shift and go to state 54
    OR              shift and go to state 55

  ! PLUS            [ reduce using rule 30 (expression -> expression GTE expression .) ]
  ! MINUS           [ reduce using rule 30 (expression -> expression GTE expression .) ]
  ! TIMES           [ reduce using rule 30 (expression -> expression GTE expression .) ]
  ! DIVIDE          [ reduce using rule 30 (expression -> expression GTE expression .) ]
  ! MOD             [ reduce using rule 30 (expression -> expression GTE expression .) ]
  ! EQ              [ reduce using rule 30 (expression -> expression GTE expression .) ]
  ! NEQ             [ reduce using rule 30 (expression -> expression GTE expression .) ]
  ! GT              [ reduce using rule 30 (expression -> expression GTE expression .) ]
  ! GTE             [ reduce using rule 30 (expression -> expression GTE expression .) ]
  ! LT              [ reduce using rule 30 (expression -> expression GTE expression .) ]
  ! LTE             [ reduce using rule 30 (expression -> expression GTE expression .) ]
  ! EQUALS          [ reduce using rule 30 (expression -> expression GTE expression .) ]
  ! OR              [ reduce using rule 30 (expression -> expression GTE expression .) ]


state 72

    (31) expression -> expression LT expression .
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . TIMES expression
    (25) expression -> expression . DIVIDE expression
    (26) expression -> expression . MOD expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NEQ expression
    (29) expression -> expression . GT expression
    (30) expression -> expression . GTE expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . LTE expression
    (33) expression -> expression . EQUALS expression
    (34) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GTE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LTE resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    RPAREN          reduce using rule 31 (expression -> expression LT expression .)
    SEMICOLON       reduce using rule 31 (expression -> expression LT expression .)
    DO              reduce using rule 31 (expression -> expression LT expression .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    MOD             shift and go to state 47
    EQ              shift and go to state 48
    NEQ             shift and go to state 49
    GT              shift and go to state 50
    GTE             shift and go to state 51
    LT              shift and go to state 52
    LTE             shift and go to state 53
    EQUALS          shift and go to state 54
    OR              shift and go to state 55

  ! PLUS            [ reduce using rule 31 (expression -> expression LT expression .) ]
  ! MINUS           [ reduce using rule 31 (expression -> expression LT expression .) ]
  ! TIMES           [ reduce using rule 31 (expression -> expression LT expression .) ]
  ! DIVIDE          [ reduce using rule 31 (expression -> expression LT expression .) ]
  ! MOD             [ reduce using rule 31 (expression -> expression LT expression .) ]
  ! EQ              [ reduce using rule 31 (expression -> expression LT expression .) ]
  ! NEQ             [ reduce using rule 31 (expression -> expression LT expression .) ]
  ! GT              [ reduce using rule 31 (expression -> expression LT expression .) ]
  ! GTE             [ reduce using rule 31 (expression -> expression LT expression .) ]
  ! LT              [ reduce using rule 31 (expression -> expression LT expression .) ]
  ! LTE             [ reduce using rule 31 (expression -> expression LT expression .) ]
  ! EQUALS          [ reduce using rule 31 (expression -> expression LT expression .) ]
  ! OR              [ reduce using rule 31 (expression -> expression LT expression .) ]


state 73

    (32) expression -> expression LTE expression .
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . TIMES expression
    (25) expression -> expression . DIVIDE expression
    (26) expression -> expression . MOD expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NEQ expression
    (29) expression -> expression . GT expression
    (30) expression -> expression . GTE expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . LTE expression
    (33) expression -> expression . EQUALS expression
    (34) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GTE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LTE resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    RPAREN          reduce using rule 32 (expression -> expression LTE expression .)
    SEMICOLON       reduce using rule 32 (expression -> expression LTE expression .)
    DO              reduce using rule 32 (expression -> expression LTE expression .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    MOD             shift and go to state 47
    EQ              shift and go to state 48
    NEQ             shift and go to state 49
    GT              shift and go to state 50
    GTE             shift and go to state 51
    LT              shift and go to state 52
    LTE             shift and go to state 53
    EQUALS          shift and go to state 54
    OR              shift and go to state 55

  ! PLUS            [ reduce using rule 32 (expression -> expression LTE expression .) ]
  ! MINUS           [ reduce using rule 32 (expression -> expression LTE expression .) ]
  ! TIMES           [ reduce using rule 32 (expression -> expression LTE expression .) ]
  ! DIVIDE          [ reduce using rule 32 (expression -> expression LTE expression .) ]
  ! MOD             [ reduce using rule 32 (expression -> expression LTE expression .) ]
  ! EQ              [ reduce using rule 32 (expression -> expression LTE expression .) ]
  ! NEQ             [ reduce using rule 32 (expression -> expression LTE expression .) ]
  ! GT              [ reduce using rule 32 (expression -> expression LTE expression .) ]
  ! GTE             [ reduce using rule 32 (expression -> expression LTE expression .) ]
  ! LT              [ reduce using rule 32 (expression -> expression LTE expression .) ]
  ! LTE             [ reduce using rule 32 (expression -> expression LTE expression .) ]
  ! EQUALS          [ reduce using rule 32 (expression -> expression LTE expression .) ]
  ! OR              [ reduce using rule 32 (expression -> expression LTE expression .) ]


state 74

    (33) expression -> expression EQUALS expression .
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . TIMES expression
    (25) expression -> expression . DIVIDE expression
    (26) expression -> expression . MOD expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NEQ expression
    (29) expression -> expression . GT expression
    (30) expression -> expression . GTE expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . LTE expression
    (33) expression -> expression . EQUALS expression
    (34) expression -> expression . OR expression

    RPAREN          reduce using rule 33 (expression -> expression EQUALS expression .)
    PLUS            reduce using rule 33 (expression -> expression EQUALS expression .)
    MINUS           reduce using rule 33 (expression -> expression EQUALS expression .)
    TIMES           reduce using rule 33 (expression -> expression EQUALS expression .)
    DIVIDE          reduce using rule 33 (expression -> expression EQUALS expression .)
    MOD             reduce using rule 33 (expression -> expression EQUALS expression .)
    EQ              reduce using rule 33 (expression -> expression EQUALS expression .)
    NEQ             reduce using rule 33 (expression -> expression EQUALS expression .)
    GT              reduce using rule 33 (expression -> expression EQUALS expression .)
    GTE             reduce using rule 33 (expression -> expression EQUALS expression .)
    LT              reduce using rule 33 (expression -> expression EQUALS expression .)
    LTE             reduce using rule 33 (expression -> expression EQUALS expression .)
    OR              reduce using rule 33 (expression -> expression EQUALS expression .)
    SEMICOLON       reduce using rule 33 (expression -> expression EQUALS expression .)
    DO              reduce using rule 33 (expression -> expression EQUALS expression .)
    EQUALS          shift and go to state 54

  ! EQUALS          [ reduce using rule 33 (expression -> expression EQUALS expression .) ]
  ! PLUS            [ shift and go to state 43 ]
  ! MINUS           [ shift and go to state 44 ]
  ! TIMES           [ shift and go to state 45 ]
  ! DIVIDE          [ shift and go to state 46 ]
  ! MOD             [ shift and go to state 47 ]
  ! EQ              [ shift and go to state 48 ]
  ! NEQ             [ shift and go to state 49 ]
  ! GT              [ shift and go to state 50 ]
  ! GTE             [ shift and go to state 51 ]
  ! LT              [ shift and go to state 52 ]
  ! LTE             [ shift and go to state 53 ]
  ! OR              [ shift and go to state 55 ]


state 75

    (34) expression -> expression OR expression .
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . TIMES expression
    (25) expression -> expression . DIVIDE expression
    (26) expression -> expression . MOD expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NEQ expression
    (29) expression -> expression . GT expression
    (30) expression -> expression . GTE expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . LTE expression
    (33) expression -> expression . EQUALS expression
    (34) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GTE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LTE resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    RPAREN          reduce using rule 34 (expression -> expression OR expression .)
    SEMICOLON       reduce using rule 34 (expression -> expression OR expression .)
    DO              reduce using rule 34 (expression -> expression OR expression .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    MOD             shift and go to state 47
    EQ              shift and go to state 48
    NEQ             shift and go to state 49
    GT              shift and go to state 50
    GTE             shift and go to state 51
    LT              shift and go to state 52
    LTE             shift and go to state 53
    EQUALS          shift and go to state 54
    OR              shift and go to state 55

  ! PLUS            [ reduce using rule 34 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 34 (expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 34 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 34 (expression -> expression OR expression .) ]
  ! MOD             [ reduce using rule 34 (expression -> expression OR expression .) ]
  ! EQ              [ reduce using rule 34 (expression -> expression OR expression .) ]
  ! NEQ             [ reduce using rule 34 (expression -> expression OR expression .) ]
  ! GT              [ reduce using rule 34 (expression -> expression OR expression .) ]
  ! GTE             [ reduce using rule 34 (expression -> expression OR expression .) ]
  ! LT              [ reduce using rule 34 (expression -> expression OR expression .) ]
  ! LTE             [ reduce using rule 34 (expression -> expression OR expression .) ]
  ! EQUALS          [ reduce using rule 34 (expression -> expression OR expression .) ]
  ! OR              [ reduce using rule 34 (expression -> expression OR expression .) ]


state 76

    (16) read_statement -> GET factor COLON IDENTIFIER . BY expression SEMICOLON

    BY              shift and go to state 80


state 77

    (17) if_statement -> HAVING condition DO declaration_list . END
    (18) if_statement -> HAVING condition DO declaration_list . EITHER declaration_list END
    (19) if_statement -> HAVING condition DO declaration_list . EITHER condition DO declaration_list END
    (4) declaration_list -> declaration_list . declaration
    (6) declaration -> . variable_declaration
    (7) declaration -> . statement
    (8) variable_declaration -> . factor COLON IDENTIFIER EQUALS expression SEMICOLON
    (9) variable_declaration -> . IDENTIFIER EQUALS expression SEMICOLON
    (10) statement -> . read_statement
    (11) statement -> . print_statement
    (12) statement -> . if_statement
    (13) statement -> . for_statement
    (14) statement -> . newline_statement
    (36) factor -> . NUMBER
    (37) factor -> . FLOAT
    (38) factor -> . INT
    (39) factor -> . BOOLEAN
    (40) factor -> . CHARCONST
    (41) factor -> . TEXT
    (42) factor -> . NULL
    (43) factor -> . LPAREN expression RPAREN
    (44) factor -> . designator
    (16) read_statement -> . GET factor COLON IDENTIFIER BY expression SEMICOLON
    (15) print_statement -> . SHOW expression SEMICOLON
    (17) if_statement -> . HAVING condition DO declaration_list END
    (18) if_statement -> . HAVING condition DO declaration_list EITHER declaration_list END
    (19) if_statement -> . HAVING condition DO declaration_list EITHER condition DO declaration_list END
    (21) for_statement -> . FOR IDENTIFIER IN RANGE expression DO NEWLINE declaration_list END
    (2) newline_statement -> . NEWLINE
    (3) newline_statement -> . newline_statement NEWLINE
    (45) designator -> . IDENTIFIER
    (46) designator -> . designator DOT IDENTIFIER

    END             shift and go to state 81
    EITHER          shift and go to state 82
    IDENTIFIER      shift and go to state 7
    NUMBER          shift and go to state 13
    FLOAT           shift and go to state 14
    INT             shift and go to state 15
    BOOLEAN         shift and go to state 16
    CHARCONST       shift and go to state 17
    TEXT            shift and go to state 18
    NULL            shift and go to state 19
    LPAREN          shift and go to state 20
    GET             shift and go to state 22
    SHOW            shift and go to state 23
    HAVING          shift and go to state 24
    FOR             shift and go to state 25
    NEWLINE         shift and go to state 26

    declaration                    shift and go to state 27
    variable_declaration           shift and go to state 4
    statement                      shift and go to state 5
    factor                         shift and go to state 6
    read_statement                 shift and go to state 8
    print_statement                shift and go to state 9
    if_statement                   shift and go to state 10
    for_statement                  shift and go to state 11
    newline_statement              shift and go to state 12
    designator                     shift and go to state 21

state 78

    (21) for_statement -> FOR IDENTIFIER IN RANGE . expression DO NEWLINE declaration_list END
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression TIMES expression
    (25) expression -> . expression DIVIDE expression
    (26) expression -> . expression MOD expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NEQ expression
    (29) expression -> . expression GT expression
    (30) expression -> . expression GTE expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression LTE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . expression OR expression
    (35) expression -> . factor
    (36) factor -> . NUMBER
    (37) factor -> . FLOAT
    (38) factor -> . INT
    (39) factor -> . BOOLEAN
    (40) factor -> . CHARCONST
    (41) factor -> . TEXT
    (42) factor -> . NULL
    (43) factor -> . LPAREN expression RPAREN
    (44) factor -> . designator
    (45) designator -> . IDENTIFIER
    (46) designator -> . designator DOT IDENTIFIER

    NUMBER          shift and go to state 13
    FLOAT           shift and go to state 14
    INT             shift and go to state 15
    BOOLEAN         shift and go to state 16
    CHARCONST       shift and go to state 17
    TEXT            shift and go to state 18
    NULL            shift and go to state 19
    LPAREN          shift and go to state 20
    IDENTIFIER      shift and go to state 33

    expression                     shift and go to state 83
    factor                         shift and go to state 32
    designator                     shift and go to state 21

state 79

    (8) variable_declaration -> factor COLON IDENTIFIER EQUALS expression . SEMICOLON
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . TIMES expression
    (25) expression -> expression . DIVIDE expression
    (26) expression -> expression . MOD expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NEQ expression
    (29) expression -> expression . GT expression
    (30) expression -> expression . GTE expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . LTE expression
    (33) expression -> expression . EQUALS expression
    (34) expression -> expression . OR expression

    SEMICOLON       shift and go to state 84
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    MOD             shift and go to state 47
    EQ              shift and go to state 48
    NEQ             shift and go to state 49
    GT              shift and go to state 50
    GTE             shift and go to state 51
    LT              shift and go to state 52
    LTE             shift and go to state 53
    EQUALS          shift and go to state 54
    OR              shift and go to state 55


state 80

    (16) read_statement -> GET factor COLON IDENTIFIER BY . expression SEMICOLON
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression TIMES expression
    (25) expression -> . expression DIVIDE expression
    (26) expression -> . expression MOD expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NEQ expression
    (29) expression -> . expression GT expression
    (30) expression -> . expression GTE expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression LTE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . expression OR expression
    (35) expression -> . factor
    (36) factor -> . NUMBER
    (37) factor -> . FLOAT
    (38) factor -> . INT
    (39) factor -> . BOOLEAN
    (40) factor -> . CHARCONST
    (41) factor -> . TEXT
    (42) factor -> . NULL
    (43) factor -> . LPAREN expression RPAREN
    (44) factor -> . designator
    (45) designator -> . IDENTIFIER
    (46) designator -> . designator DOT IDENTIFIER

    NUMBER          shift and go to state 13
    FLOAT           shift and go to state 14
    INT             shift and go to state 15
    BOOLEAN         shift and go to state 16
    CHARCONST       shift and go to state 17
    TEXT            shift and go to state 18
    NULL            shift and go to state 19
    LPAREN          shift and go to state 20
    IDENTIFIER      shift and go to state 33

    factor                         shift and go to state 32
    expression                     shift and go to state 85
    designator                     shift and go to state 21

state 81

    (17) if_statement -> HAVING condition DO declaration_list END .

    IDENTIFIER      reduce using rule 17 (if_statement -> HAVING condition DO declaration_list END .)
    NUMBER          reduce using rule 17 (if_statement -> HAVING condition DO declaration_list END .)
    FLOAT           reduce using rule 17 (if_statement -> HAVING condition DO declaration_list END .)
    INT             reduce using rule 17 (if_statement -> HAVING condition DO declaration_list END .)
    BOOLEAN         reduce using rule 17 (if_statement -> HAVING condition DO declaration_list END .)
    CHARCONST       reduce using rule 17 (if_statement -> HAVING condition DO declaration_list END .)
    TEXT            reduce using rule 17 (if_statement -> HAVING condition DO declaration_list END .)
    NULL            reduce using rule 17 (if_statement -> HAVING condition DO declaration_list END .)
    LPAREN          reduce using rule 17 (if_statement -> HAVING condition DO declaration_list END .)
    GET             reduce using rule 17 (if_statement -> HAVING condition DO declaration_list END .)
    SHOW            reduce using rule 17 (if_statement -> HAVING condition DO declaration_list END .)
    HAVING          reduce using rule 17 (if_statement -> HAVING condition DO declaration_list END .)
    FOR             reduce using rule 17 (if_statement -> HAVING condition DO declaration_list END .)
    NEWLINE         reduce using rule 17 (if_statement -> HAVING condition DO declaration_list END .)
    $end            reduce using rule 17 (if_statement -> HAVING condition DO declaration_list END .)
    END             reduce using rule 17 (if_statement -> HAVING condition DO declaration_list END .)
    EITHER          reduce using rule 17 (if_statement -> HAVING condition DO declaration_list END .)


state 82

    (18) if_statement -> HAVING condition DO declaration_list EITHER . declaration_list END
    (19) if_statement -> HAVING condition DO declaration_list EITHER . condition DO declaration_list END
    (4) declaration_list -> . declaration_list declaration
    (5) declaration_list -> . declaration
    (20) condition -> . expression
    (6) declaration -> . variable_declaration
    (7) declaration -> . statement
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression TIMES expression
    (25) expression -> . expression DIVIDE expression
    (26) expression -> . expression MOD expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NEQ expression
    (29) expression -> . expression GT expression
    (30) expression -> . expression GTE expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression LTE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . expression OR expression
    (35) expression -> . factor
    (8) variable_declaration -> . factor COLON IDENTIFIER EQUALS expression SEMICOLON
    (9) variable_declaration -> . IDENTIFIER EQUALS expression SEMICOLON
    (10) statement -> . read_statement
    (11) statement -> . print_statement
    (12) statement -> . if_statement
    (13) statement -> . for_statement
    (14) statement -> . newline_statement
    (36) factor -> . NUMBER
    (37) factor -> . FLOAT
    (38) factor -> . INT
    (39) factor -> . BOOLEAN
    (40) factor -> . CHARCONST
    (41) factor -> . TEXT
    (42) factor -> . NULL
    (43) factor -> . LPAREN expression RPAREN
    (44) factor -> . designator
    (16) read_statement -> . GET factor COLON IDENTIFIER BY expression SEMICOLON
    (15) print_statement -> . SHOW expression SEMICOLON
    (17) if_statement -> . HAVING condition DO declaration_list END
    (18) if_statement -> . HAVING condition DO declaration_list EITHER declaration_list END
    (19) if_statement -> . HAVING condition DO declaration_list EITHER condition DO declaration_list END
    (21) for_statement -> . FOR IDENTIFIER IN RANGE expression DO NEWLINE declaration_list END
    (2) newline_statement -> . NEWLINE
    (3) newline_statement -> . newline_statement NEWLINE
    (45) designator -> . IDENTIFIER
    (46) designator -> . designator DOT IDENTIFIER

    IDENTIFIER      shift and go to state 7
    NUMBER          shift and go to state 13
    FLOAT           shift and go to state 14
    INT             shift and go to state 15
    BOOLEAN         shift and go to state 16
    CHARCONST       shift and go to state 17
    TEXT            shift and go to state 18
    NULL            shift and go to state 19
    LPAREN          shift and go to state 20
    GET             shift and go to state 22
    SHOW            shift and go to state 23
    HAVING          shift and go to state 24
    FOR             shift and go to state 25
    NEWLINE         shift and go to state 26

    condition                      shift and go to state 86
    declaration_list               shift and go to state 87
    declaration                    shift and go to state 3
    expression                     shift and go to state 38
    variable_declaration           shift and go to state 4
    statement                      shift and go to state 5
    factor                         shift and go to state 88
    read_statement                 shift and go to state 8
    print_statement                shift and go to state 9
    if_statement                   shift and go to state 10
    for_statement                  shift and go to state 11
    newline_statement              shift and go to state 12
    designator                     shift and go to state 21

state 83

    (21) for_statement -> FOR IDENTIFIER IN RANGE expression . DO NEWLINE declaration_list END
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . TIMES expression
    (25) expression -> expression . DIVIDE expression
    (26) expression -> expression . MOD expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NEQ expression
    (29) expression -> expression . GT expression
    (30) expression -> expression . GTE expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . LTE expression
    (33) expression -> expression . EQUALS expression
    (34) expression -> expression . OR expression

    DO              shift and go to state 89
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    MOD             shift and go to state 47
    EQ              shift and go to state 48
    NEQ             shift and go to state 49
    GT              shift and go to state 50
    GTE             shift and go to state 51
    LT              shift and go to state 52
    LTE             shift and go to state 53
    EQUALS          shift and go to state 54
    OR              shift and go to state 55


state 84

    (8) variable_declaration -> factor COLON IDENTIFIER EQUALS expression SEMICOLON .

    IDENTIFIER      reduce using rule 8 (variable_declaration -> factor COLON IDENTIFIER EQUALS expression SEMICOLON .)
    NUMBER          reduce using rule 8 (variable_declaration -> factor COLON IDENTIFIER EQUALS expression SEMICOLON .)
    FLOAT           reduce using rule 8 (variable_declaration -> factor COLON IDENTIFIER EQUALS expression SEMICOLON .)
    INT             reduce using rule 8 (variable_declaration -> factor COLON IDENTIFIER EQUALS expression SEMICOLON .)
    BOOLEAN         reduce using rule 8 (variable_declaration -> factor COLON IDENTIFIER EQUALS expression SEMICOLON .)
    CHARCONST       reduce using rule 8 (variable_declaration -> factor COLON IDENTIFIER EQUALS expression SEMICOLON .)
    TEXT            reduce using rule 8 (variable_declaration -> factor COLON IDENTIFIER EQUALS expression SEMICOLON .)
    NULL            reduce using rule 8 (variable_declaration -> factor COLON IDENTIFIER EQUALS expression SEMICOLON .)
    LPAREN          reduce using rule 8 (variable_declaration -> factor COLON IDENTIFIER EQUALS expression SEMICOLON .)
    GET             reduce using rule 8 (variable_declaration -> factor COLON IDENTIFIER EQUALS expression SEMICOLON .)
    SHOW            reduce using rule 8 (variable_declaration -> factor COLON IDENTIFIER EQUALS expression SEMICOLON .)
    HAVING          reduce using rule 8 (variable_declaration -> factor COLON IDENTIFIER EQUALS expression SEMICOLON .)
    FOR             reduce using rule 8 (variable_declaration -> factor COLON IDENTIFIER EQUALS expression SEMICOLON .)
    NEWLINE         reduce using rule 8 (variable_declaration -> factor COLON IDENTIFIER EQUALS expression SEMICOLON .)
    $end            reduce using rule 8 (variable_declaration -> factor COLON IDENTIFIER EQUALS expression SEMICOLON .)
    END             reduce using rule 8 (variable_declaration -> factor COLON IDENTIFIER EQUALS expression SEMICOLON .)
    EITHER          reduce using rule 8 (variable_declaration -> factor COLON IDENTIFIER EQUALS expression SEMICOLON .)


state 85

    (16) read_statement -> GET factor COLON IDENTIFIER BY expression . SEMICOLON
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . TIMES expression
    (25) expression -> expression . DIVIDE expression
    (26) expression -> expression . MOD expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NEQ expression
    (29) expression -> expression . GT expression
    (30) expression -> expression . GTE expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . LTE expression
    (33) expression -> expression . EQUALS expression
    (34) expression -> expression . OR expression

    SEMICOLON       shift and go to state 90
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    MOD             shift and go to state 47
    EQ              shift and go to state 48
    NEQ             shift and go to state 49
    GT              shift and go to state 50
    GTE             shift and go to state 51
    LT              shift and go to state 52
    LTE             shift and go to state 53
    EQUALS          shift and go to state 54
    OR              shift and go to state 55


state 86

    (19) if_statement -> HAVING condition DO declaration_list EITHER condition . DO declaration_list END

    DO              shift and go to state 91


state 87

    (18) if_statement -> HAVING condition DO declaration_list EITHER declaration_list . END
    (4) declaration_list -> declaration_list . declaration
    (6) declaration -> . variable_declaration
    (7) declaration -> . statement
    (8) variable_declaration -> . factor COLON IDENTIFIER EQUALS expression SEMICOLON
    (9) variable_declaration -> . IDENTIFIER EQUALS expression SEMICOLON
    (10) statement -> . read_statement
    (11) statement -> . print_statement
    (12) statement -> . if_statement
    (13) statement -> . for_statement
    (14) statement -> . newline_statement
    (36) factor -> . NUMBER
    (37) factor -> . FLOAT
    (38) factor -> . INT
    (39) factor -> . BOOLEAN
    (40) factor -> . CHARCONST
    (41) factor -> . TEXT
    (42) factor -> . NULL
    (43) factor -> . LPAREN expression RPAREN
    (44) factor -> . designator
    (16) read_statement -> . GET factor COLON IDENTIFIER BY expression SEMICOLON
    (15) print_statement -> . SHOW expression SEMICOLON
    (17) if_statement -> . HAVING condition DO declaration_list END
    (18) if_statement -> . HAVING condition DO declaration_list EITHER declaration_list END
    (19) if_statement -> . HAVING condition DO declaration_list EITHER condition DO declaration_list END
    (21) for_statement -> . FOR IDENTIFIER IN RANGE expression DO NEWLINE declaration_list END
    (2) newline_statement -> . NEWLINE
    (3) newline_statement -> . newline_statement NEWLINE
    (45) designator -> . IDENTIFIER
    (46) designator -> . designator DOT IDENTIFIER

    END             shift and go to state 92
    IDENTIFIER      shift and go to state 7
    NUMBER          shift and go to state 13
    FLOAT           shift and go to state 14
    INT             shift and go to state 15
    BOOLEAN         shift and go to state 16
    CHARCONST       shift and go to state 17
    TEXT            shift and go to state 18
    NULL            shift and go to state 19
    LPAREN          shift and go to state 20
    GET             shift and go to state 22
    SHOW            shift and go to state 23
    HAVING          shift and go to state 24
    FOR             shift and go to state 25
    NEWLINE         shift and go to state 26

    declaration                    shift and go to state 27
    variable_declaration           shift and go to state 4
    statement                      shift and go to state 5
    factor                         shift and go to state 6
    read_statement                 shift and go to state 8
    print_statement                shift and go to state 9
    if_statement                   shift and go to state 10
    for_statement                  shift and go to state 11
    newline_statement              shift and go to state 12
    designator                     shift and go to state 21

state 88

    (35) expression -> factor .
    (8) variable_declaration -> factor . COLON IDENTIFIER EQUALS expression SEMICOLON

    PLUS            reduce using rule 35 (expression -> factor .)
    MINUS           reduce using rule 35 (expression -> factor .)
    TIMES           reduce using rule 35 (expression -> factor .)
    DIVIDE          reduce using rule 35 (expression -> factor .)
    MOD             reduce using rule 35 (expression -> factor .)
    EQ              reduce using rule 35 (expression -> factor .)
    NEQ             reduce using rule 35 (expression -> factor .)
    GT              reduce using rule 35 (expression -> factor .)
    GTE             reduce using rule 35 (expression -> factor .)
    LT              reduce using rule 35 (expression -> factor .)
    LTE             reduce using rule 35 (expression -> factor .)
    EQUALS          reduce using rule 35 (expression -> factor .)
    OR              reduce using rule 35 (expression -> factor .)
    DO              reduce using rule 35 (expression -> factor .)
    COLON           shift and go to state 28


state 89

    (21) for_statement -> FOR IDENTIFIER IN RANGE expression DO . NEWLINE declaration_list END

    NEWLINE         shift and go to state 93


state 90

    (16) read_statement -> GET factor COLON IDENTIFIER BY expression SEMICOLON .

    IDENTIFIER      reduce using rule 16 (read_statement -> GET factor COLON IDENTIFIER BY expression SEMICOLON .)
    NUMBER          reduce using rule 16 (read_statement -> GET factor COLON IDENTIFIER BY expression SEMICOLON .)
    FLOAT           reduce using rule 16 (read_statement -> GET factor COLON IDENTIFIER BY expression SEMICOLON .)
    INT             reduce using rule 16 (read_statement -> GET factor COLON IDENTIFIER BY expression SEMICOLON .)
    BOOLEAN         reduce using rule 16 (read_statement -> GET factor COLON IDENTIFIER BY expression SEMICOLON .)
    CHARCONST       reduce using rule 16 (read_statement -> GET factor COLON IDENTIFIER BY expression SEMICOLON .)
    TEXT            reduce using rule 16 (read_statement -> GET factor COLON IDENTIFIER BY expression SEMICOLON .)
    NULL            reduce using rule 16 (read_statement -> GET factor COLON IDENTIFIER BY expression SEMICOLON .)
    LPAREN          reduce using rule 16 (read_statement -> GET factor COLON IDENTIFIER BY expression SEMICOLON .)
    GET             reduce using rule 16 (read_statement -> GET factor COLON IDENTIFIER BY expression SEMICOLON .)
    SHOW            reduce using rule 16 (read_statement -> GET factor COLON IDENTIFIER BY expression SEMICOLON .)
    HAVING          reduce using rule 16 (read_statement -> GET factor COLON IDENTIFIER BY expression SEMICOLON .)
    FOR             reduce using rule 16 (read_statement -> GET factor COLON IDENTIFIER BY expression SEMICOLON .)
    NEWLINE         reduce using rule 16 (read_statement -> GET factor COLON IDENTIFIER BY expression SEMICOLON .)
    $end            reduce using rule 16 (read_statement -> GET factor COLON IDENTIFIER BY expression SEMICOLON .)
    END             reduce using rule 16 (read_statement -> GET factor COLON IDENTIFIER BY expression SEMICOLON .)
    EITHER          reduce using rule 16 (read_statement -> GET factor COLON IDENTIFIER BY expression SEMICOLON .)


state 91

    (19) if_statement -> HAVING condition DO declaration_list EITHER condition DO . declaration_list END
    (4) declaration_list -> . declaration_list declaration
    (5) declaration_list -> . declaration
    (6) declaration -> . variable_declaration
    (7) declaration -> . statement
    (8) variable_declaration -> . factor COLON IDENTIFIER EQUALS expression SEMICOLON
    (9) variable_declaration -> . IDENTIFIER EQUALS expression SEMICOLON
    (10) statement -> . read_statement
    (11) statement -> . print_statement
    (12) statement -> . if_statement
    (13) statement -> . for_statement
    (14) statement -> . newline_statement
    (36) factor -> . NUMBER
    (37) factor -> . FLOAT
    (38) factor -> . INT
    (39) factor -> . BOOLEAN
    (40) factor -> . CHARCONST
    (41) factor -> . TEXT
    (42) factor -> . NULL
    (43) factor -> . LPAREN expression RPAREN
    (44) factor -> . designator
    (16) read_statement -> . GET factor COLON IDENTIFIER BY expression SEMICOLON
    (15) print_statement -> . SHOW expression SEMICOLON
    (17) if_statement -> . HAVING condition DO declaration_list END
    (18) if_statement -> . HAVING condition DO declaration_list EITHER declaration_list END
    (19) if_statement -> . HAVING condition DO declaration_list EITHER condition DO declaration_list END
    (21) for_statement -> . FOR IDENTIFIER IN RANGE expression DO NEWLINE declaration_list END
    (2) newline_statement -> . NEWLINE
    (3) newline_statement -> . newline_statement NEWLINE
    (45) designator -> . IDENTIFIER
    (46) designator -> . designator DOT IDENTIFIER

    IDENTIFIER      shift and go to state 7
    NUMBER          shift and go to state 13
    FLOAT           shift and go to state 14
    INT             shift and go to state 15
    BOOLEAN         shift and go to state 16
    CHARCONST       shift and go to state 17
    TEXT            shift and go to state 18
    NULL            shift and go to state 19
    LPAREN          shift and go to state 20
    GET             shift and go to state 22
    SHOW            shift and go to state 23
    HAVING          shift and go to state 24
    FOR             shift and go to state 25
    NEWLINE         shift and go to state 26

    declaration_list               shift and go to state 94
    declaration                    shift and go to state 3
    variable_declaration           shift and go to state 4
    statement                      shift and go to state 5
    factor                         shift and go to state 6
    read_statement                 shift and go to state 8
    print_statement                shift and go to state 9
    if_statement                   shift and go to state 10
    for_statement                  shift and go to state 11
    newline_statement              shift and go to state 12
    designator                     shift and go to state 21

state 92

    (18) if_statement -> HAVING condition DO declaration_list EITHER declaration_list END .

    IDENTIFIER      reduce using rule 18 (if_statement -> HAVING condition DO declaration_list EITHER declaration_list END .)
    NUMBER          reduce using rule 18 (if_statement -> HAVING condition DO declaration_list EITHER declaration_list END .)
    FLOAT           reduce using rule 18 (if_statement -> HAVING condition DO declaration_list EITHER declaration_list END .)
    INT             reduce using rule 18 (if_statement -> HAVING condition DO declaration_list EITHER declaration_list END .)
    BOOLEAN         reduce using rule 18 (if_statement -> HAVING condition DO declaration_list EITHER declaration_list END .)
    CHARCONST       reduce using rule 18 (if_statement -> HAVING condition DO declaration_list EITHER declaration_list END .)
    TEXT            reduce using rule 18 (if_statement -> HAVING condition DO declaration_list EITHER declaration_list END .)
    NULL            reduce using rule 18 (if_statement -> HAVING condition DO declaration_list EITHER declaration_list END .)
    LPAREN          reduce using rule 18 (if_statement -> HAVING condition DO declaration_list EITHER declaration_list END .)
    GET             reduce using rule 18 (if_statement -> HAVING condition DO declaration_list EITHER declaration_list END .)
    SHOW            reduce using rule 18 (if_statement -> HAVING condition DO declaration_list EITHER declaration_list END .)
    HAVING          reduce using rule 18 (if_statement -> HAVING condition DO declaration_list EITHER declaration_list END .)
    FOR             reduce using rule 18 (if_statement -> HAVING condition DO declaration_list EITHER declaration_list END .)
    NEWLINE         reduce using rule 18 (if_statement -> HAVING condition DO declaration_list EITHER declaration_list END .)
    $end            reduce using rule 18 (if_statement -> HAVING condition DO declaration_list EITHER declaration_list END .)
    END             reduce using rule 18 (if_statement -> HAVING condition DO declaration_list EITHER declaration_list END .)
    EITHER          reduce using rule 18 (if_statement -> HAVING condition DO declaration_list EITHER declaration_list END .)


state 93

    (21) for_statement -> FOR IDENTIFIER IN RANGE expression DO NEWLINE . declaration_list END
    (4) declaration_list -> . declaration_list declaration
    (5) declaration_list -> . declaration
    (6) declaration -> . variable_declaration
    (7) declaration -> . statement
    (8) variable_declaration -> . factor COLON IDENTIFIER EQUALS expression SEMICOLON
    (9) variable_declaration -> . IDENTIFIER EQUALS expression SEMICOLON
    (10) statement -> . read_statement
    (11) statement -> . print_statement
    (12) statement -> . if_statement
    (13) statement -> . for_statement
    (14) statement -> . newline_statement
    (36) factor -> . NUMBER
    (37) factor -> . FLOAT
    (38) factor -> . INT
    (39) factor -> . BOOLEAN
    (40) factor -> . CHARCONST
    (41) factor -> . TEXT
    (42) factor -> . NULL
    (43) factor -> . LPAREN expression RPAREN
    (44) factor -> . designator
    (16) read_statement -> . GET factor COLON IDENTIFIER BY expression SEMICOLON
    (15) print_statement -> . SHOW expression SEMICOLON
    (17) if_statement -> . HAVING condition DO declaration_list END
    (18) if_statement -> . HAVING condition DO declaration_list EITHER declaration_list END
    (19) if_statement -> . HAVING condition DO declaration_list EITHER condition DO declaration_list END
    (21) for_statement -> . FOR IDENTIFIER IN RANGE expression DO NEWLINE declaration_list END
    (2) newline_statement -> . NEWLINE
    (3) newline_statement -> . newline_statement NEWLINE
    (45) designator -> . IDENTIFIER
    (46) designator -> . designator DOT IDENTIFIER

    IDENTIFIER      shift and go to state 7
    NUMBER          shift and go to state 13
    FLOAT           shift and go to state 14
    INT             shift and go to state 15
    BOOLEAN         shift and go to state 16
    CHARCONST       shift and go to state 17
    TEXT            shift and go to state 18
    NULL            shift and go to state 19
    LPAREN          shift and go to state 20
    GET             shift and go to state 22
    SHOW            shift and go to state 23
    HAVING          shift and go to state 24
    FOR             shift and go to state 25
    NEWLINE         shift and go to state 26

    declaration_list               shift and go to state 95
    declaration                    shift and go to state 3
    variable_declaration           shift and go to state 4
    statement                      shift and go to state 5
    factor                         shift and go to state 6
    read_statement                 shift and go to state 8
    print_statement                shift and go to state 9
    if_statement                   shift and go to state 10
    for_statement                  shift and go to state 11
    newline_statement              shift and go to state 12
    designator                     shift and go to state 21

state 94

    (19) if_statement -> HAVING condition DO declaration_list EITHER condition DO declaration_list . END
    (4) declaration_list -> declaration_list . declaration
    (6) declaration -> . variable_declaration
    (7) declaration -> . statement
    (8) variable_declaration -> . factor COLON IDENTIFIER EQUALS expression SEMICOLON
    (9) variable_declaration -> . IDENTIFIER EQUALS expression SEMICOLON
    (10) statement -> . read_statement
    (11) statement -> . print_statement
    (12) statement -> . if_statement
    (13) statement -> . for_statement
    (14) statement -> . newline_statement
    (36) factor -> . NUMBER
    (37) factor -> . FLOAT
    (38) factor -> . INT
    (39) factor -> . BOOLEAN
    (40) factor -> . CHARCONST
    (41) factor -> . TEXT
    (42) factor -> . NULL
    (43) factor -> . LPAREN expression RPAREN
    (44) factor -> . designator
    (16) read_statement -> . GET factor COLON IDENTIFIER BY expression SEMICOLON
    (15) print_statement -> . SHOW expression SEMICOLON
    (17) if_statement -> . HAVING condition DO declaration_list END
    (18) if_statement -> . HAVING condition DO declaration_list EITHER declaration_list END
    (19) if_statement -> . HAVING condition DO declaration_list EITHER condition DO declaration_list END
    (21) for_statement -> . FOR IDENTIFIER IN RANGE expression DO NEWLINE declaration_list END
    (2) newline_statement -> . NEWLINE
    (3) newline_statement -> . newline_statement NEWLINE
    (45) designator -> . IDENTIFIER
    (46) designator -> . designator DOT IDENTIFIER

    END             shift and go to state 96
    IDENTIFIER      shift and go to state 7
    NUMBER          shift and go to state 13
    FLOAT           shift and go to state 14
    INT             shift and go to state 15
    BOOLEAN         shift and go to state 16
    CHARCONST       shift and go to state 17
    TEXT            shift and go to state 18
    NULL            shift and go to state 19
    LPAREN          shift and go to state 20
    GET             shift and go to state 22
    SHOW            shift and go to state 23
    HAVING          shift and go to state 24
    FOR             shift and go to state 25
    NEWLINE         shift and go to state 26

    declaration                    shift and go to state 27
    variable_declaration           shift and go to state 4
    statement                      shift and go to state 5
    factor                         shift and go to state 6
    read_statement                 shift and go to state 8
    print_statement                shift and go to state 9
    if_statement                   shift and go to state 10
    for_statement                  shift and go to state 11
    newline_statement              shift and go to state 12
    designator                     shift and go to state 21

state 95

    (21) for_statement -> FOR IDENTIFIER IN RANGE expression DO NEWLINE declaration_list . END
    (4) declaration_list -> declaration_list . declaration
    (6) declaration -> . variable_declaration
    (7) declaration -> . statement
    (8) variable_declaration -> . factor COLON IDENTIFIER EQUALS expression SEMICOLON
    (9) variable_declaration -> . IDENTIFIER EQUALS expression SEMICOLON
    (10) statement -> . read_statement
    (11) statement -> . print_statement
    (12) statement -> . if_statement
    (13) statement -> . for_statement
    (14) statement -> . newline_statement
    (36) factor -> . NUMBER
    (37) factor -> . FLOAT
    (38) factor -> . INT
    (39) factor -> . BOOLEAN
    (40) factor -> . CHARCONST
    (41) factor -> . TEXT
    (42) factor -> . NULL
    (43) factor -> . LPAREN expression RPAREN
    (44) factor -> . designator
    (16) read_statement -> . GET factor COLON IDENTIFIER BY expression SEMICOLON
    (15) print_statement -> . SHOW expression SEMICOLON
    (17) if_statement -> . HAVING condition DO declaration_list END
    (18) if_statement -> . HAVING condition DO declaration_list EITHER declaration_list END
    (19) if_statement -> . HAVING condition DO declaration_list EITHER condition DO declaration_list END
    (21) for_statement -> . FOR IDENTIFIER IN RANGE expression DO NEWLINE declaration_list END
    (2) newline_statement -> . NEWLINE
    (3) newline_statement -> . newline_statement NEWLINE
    (45) designator -> . IDENTIFIER
    (46) designator -> . designator DOT IDENTIFIER

    END             shift and go to state 97
    IDENTIFIER      shift and go to state 7
    NUMBER          shift and go to state 13
    FLOAT           shift and go to state 14
    INT             shift and go to state 15
    BOOLEAN         shift and go to state 16
    CHARCONST       shift and go to state 17
    TEXT            shift and go to state 18
    NULL            shift and go to state 19
    LPAREN          shift and go to state 20
    GET             shift and go to state 22
    SHOW            shift and go to state 23
    HAVING          shift and go to state 24
    FOR             shift and go to state 25
    NEWLINE         shift and go to state 26

    declaration                    shift and go to state 27
    variable_declaration           shift and go to state 4
    statement                      shift and go to state 5
    factor                         shift and go to state 6
    read_statement                 shift and go to state 8
    print_statement                shift and go to state 9
    if_statement                   shift and go to state 10
    for_statement                  shift and go to state 11
    newline_statement              shift and go to state 12
    designator                     shift and go to state 21

state 96

    (19) if_statement -> HAVING condition DO declaration_list EITHER condition DO declaration_list END .

    IDENTIFIER      reduce using rule 19 (if_statement -> HAVING condition DO declaration_list EITHER condition DO declaration_list END .)
    NUMBER          reduce using rule 19 (if_statement -> HAVING condition DO declaration_list EITHER condition DO declaration_list END .)
    FLOAT           reduce using rule 19 (if_statement -> HAVING condition DO declaration_list EITHER condition DO declaration_list END .)
    INT             reduce using rule 19 (if_statement -> HAVING condition DO declaration_list EITHER condition DO declaration_list END .)
    BOOLEAN         reduce using rule 19 (if_statement -> HAVING condition DO declaration_list EITHER condition DO declaration_list END .)
    CHARCONST       reduce using rule 19 (if_statement -> HAVING condition DO declaration_list EITHER condition DO declaration_list END .)
    TEXT            reduce using rule 19 (if_statement -> HAVING condition DO declaration_list EITHER condition DO declaration_list END .)
    NULL            reduce using rule 19 (if_statement -> HAVING condition DO declaration_list EITHER condition DO declaration_list END .)
    LPAREN          reduce using rule 19 (if_statement -> HAVING condition DO declaration_list EITHER condition DO declaration_list END .)
    GET             reduce using rule 19 (if_statement -> HAVING condition DO declaration_list EITHER condition DO declaration_list END .)
    SHOW            reduce using rule 19 (if_statement -> HAVING condition DO declaration_list EITHER condition DO declaration_list END .)
    HAVING          reduce using rule 19 (if_statement -> HAVING condition DO declaration_list EITHER condition DO declaration_list END .)
    FOR             reduce using rule 19 (if_statement -> HAVING condition DO declaration_list EITHER condition DO declaration_list END .)
    NEWLINE         reduce using rule 19 (if_statement -> HAVING condition DO declaration_list EITHER condition DO declaration_list END .)
    $end            reduce using rule 19 (if_statement -> HAVING condition DO declaration_list EITHER condition DO declaration_list END .)
    END             reduce using rule 19 (if_statement -> HAVING condition DO declaration_list EITHER condition DO declaration_list END .)
    EITHER          reduce using rule 19 (if_statement -> HAVING condition DO declaration_list EITHER condition DO declaration_list END .)


state 97

    (21) for_statement -> FOR IDENTIFIER IN RANGE expression DO NEWLINE declaration_list END .

    IDENTIFIER      reduce using rule 21 (for_statement -> FOR IDENTIFIER IN RANGE expression DO NEWLINE declaration_list END .)
    NUMBER          reduce using rule 21 (for_statement -> FOR IDENTIFIER IN RANGE expression DO NEWLINE declaration_list END .)
    FLOAT           reduce using rule 21 (for_statement -> FOR IDENTIFIER IN RANGE expression DO NEWLINE declaration_list END .)
    INT             reduce using rule 21 (for_statement -> FOR IDENTIFIER IN RANGE expression DO NEWLINE declaration_list END .)
    BOOLEAN         reduce using rule 21 (for_statement -> FOR IDENTIFIER IN RANGE expression DO NEWLINE declaration_list END .)
    CHARCONST       reduce using rule 21 (for_statement -> FOR IDENTIFIER IN RANGE expression DO NEWLINE declaration_list END .)
    TEXT            reduce using rule 21 (for_statement -> FOR IDENTIFIER IN RANGE expression DO NEWLINE declaration_list END .)
    NULL            reduce using rule 21 (for_statement -> FOR IDENTIFIER IN RANGE expression DO NEWLINE declaration_list END .)
    LPAREN          reduce using rule 21 (for_statement -> FOR IDENTIFIER IN RANGE expression DO NEWLINE declaration_list END .)
    GET             reduce using rule 21 (for_statement -> FOR IDENTIFIER IN RANGE expression DO NEWLINE declaration_list END .)
    SHOW            reduce using rule 21 (for_statement -> FOR IDENTIFIER IN RANGE expression DO NEWLINE declaration_list END .)
    HAVING          reduce using rule 21 (for_statement -> FOR IDENTIFIER IN RANGE expression DO NEWLINE declaration_list END .)
    FOR             reduce using rule 21 (for_statement -> FOR IDENTIFIER IN RANGE expression DO NEWLINE declaration_list END .)
    NEWLINE         reduce using rule 21 (for_statement -> FOR IDENTIFIER IN RANGE expression DO NEWLINE declaration_list END .)
    $end            reduce using rule 21 (for_statement -> FOR IDENTIFIER IN RANGE expression DO NEWLINE declaration_list END .)
    END             reduce using rule 21 (for_statement -> FOR IDENTIFIER IN RANGE expression DO NEWLINE declaration_list END .)
    EITHER          reduce using rule 21 (for_statement -> FOR IDENTIFIER IN RANGE expression DO NEWLINE declaration_list END .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for EQUALS in state 7 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 12 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 68 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 68 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 68 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 68 resolved as shift
WARNING: shift/reduce conflict for MOD in state 68 resolved as shift
WARNING: shift/reduce conflict for EQ in state 68 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 68 resolved as shift
WARNING: shift/reduce conflict for GT in state 68 resolved as shift
WARNING: shift/reduce conflict for GTE in state 68 resolved as shift
WARNING: shift/reduce conflict for LT in state 68 resolved as shift
WARNING: shift/reduce conflict for LTE in state 68 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 68 resolved as shift
WARNING: shift/reduce conflict for OR in state 68 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 69 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 69 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 69 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 69 resolved as shift
WARNING: shift/reduce conflict for MOD in state 69 resolved as shift
WARNING: shift/reduce conflict for EQ in state 69 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 69 resolved as shift
WARNING: shift/reduce conflict for GT in state 69 resolved as shift
WARNING: shift/reduce conflict for GTE in state 69 resolved as shift
WARNING: shift/reduce conflict for LT in state 69 resolved as shift
WARNING: shift/reduce conflict for LTE in state 69 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 69 resolved as shift
WARNING: shift/reduce conflict for OR in state 69 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 70 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 70 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 70 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 70 resolved as shift
WARNING: shift/reduce conflict for MOD in state 70 resolved as shift
WARNING: shift/reduce conflict for EQ in state 70 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 70 resolved as shift
WARNING: shift/reduce conflict for GT in state 70 resolved as shift
WARNING: shift/reduce conflict for GTE in state 70 resolved as shift
WARNING: shift/reduce conflict for LT in state 70 resolved as shift
WARNING: shift/reduce conflict for LTE in state 70 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 70 resolved as shift
WARNING: shift/reduce conflict for OR in state 70 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 71 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 71 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 71 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 71 resolved as shift
WARNING: shift/reduce conflict for MOD in state 71 resolved as shift
WARNING: shift/reduce conflict for EQ in state 71 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 71 resolved as shift
WARNING: shift/reduce conflict for GT in state 71 resolved as shift
WARNING: shift/reduce conflict for GTE in state 71 resolved as shift
WARNING: shift/reduce conflict for LT in state 71 resolved as shift
WARNING: shift/reduce conflict for LTE in state 71 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 71 resolved as shift
WARNING: shift/reduce conflict for OR in state 71 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 72 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 72 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 72 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 72 resolved as shift
WARNING: shift/reduce conflict for MOD in state 72 resolved as shift
WARNING: shift/reduce conflict for EQ in state 72 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 72 resolved as shift
WARNING: shift/reduce conflict for GT in state 72 resolved as shift
WARNING: shift/reduce conflict for GTE in state 72 resolved as shift
WARNING: shift/reduce conflict for LT in state 72 resolved as shift
WARNING: shift/reduce conflict for LTE in state 72 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 72 resolved as shift
WARNING: shift/reduce conflict for OR in state 72 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 73 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 73 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 73 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 73 resolved as shift
WARNING: shift/reduce conflict for MOD in state 73 resolved as shift
WARNING: shift/reduce conflict for EQ in state 73 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 73 resolved as shift
WARNING: shift/reduce conflict for GT in state 73 resolved as shift
WARNING: shift/reduce conflict for GTE in state 73 resolved as shift
WARNING: shift/reduce conflict for LT in state 73 resolved as shift
WARNING: shift/reduce conflict for LTE in state 73 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 73 resolved as shift
WARNING: shift/reduce conflict for OR in state 73 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 75 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 75 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 75 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 75 resolved as shift
WARNING: shift/reduce conflict for MOD in state 75 resolved as shift
WARNING: shift/reduce conflict for EQ in state 75 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 75 resolved as shift
WARNING: shift/reduce conflict for GT in state 75 resolved as shift
WARNING: shift/reduce conflict for GTE in state 75 resolved as shift
WARNING: shift/reduce conflict for LT in state 75 resolved as shift
WARNING: shift/reduce conflict for LTE in state 75 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 75 resolved as shift
WARNING: shift/reduce conflict for OR in state 75 resolved as shift
