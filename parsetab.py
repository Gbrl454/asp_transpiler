
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDEMODrightEQUALSBOOLEAN BY CHARCONST COLON COMMA DIVIDE DO DOT EITHER END EQ EQUALS FLOAT FOR FUNCTION GET GT GTE HAVING IDENTIFIER IN INT LBRACE LPAREN LT LTE MINUS MOD NEQ NEWLINE NULL NUMBER OR PLUS RANGE RBRACE RETURN RPAREN SEMICOLON SHOW TEXT TIMES TYPE VARprogram : declaration_listnewline_statement : NEWLINE\n    | newline_statement NEWLINEdeclaration_list : declaration_list declaration\n                        | declarationdeclaration : variable_declaration\n                   | statementvariable_declaration : factor COLON IDENTIFIER EQUALS expression SEMICOLON\n                            | IDENTIFIER EQUALS expression SEMICOLONstatement : read_statement\n                 | print_statement\n                 | if_statement\n                 | for_statement\n                 | newline_statementprint_statement : SHOW expression SEMICOLONread_statement : GET factor COLON IDENTIFIER BY expression SEMICOLONif_statement : HAVING condition DO declaration_list END\n                    | HAVING condition DO declaration_list EITHER declaration_list END\n                    | HAVING condition DO declaration_list EITHER condition DO declaration_list ENDcondition : expressionfor_statement : FOR IDENTIFIER IN RANGE expression DO NEWLINE declaration_list ENDexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  | expression MOD expression\n                  | expression EQ expression\n                  | expression NEQ expression\n                  | expression GT expression\n                  | expression GTE expression\n                  | expression LT expression\n                  | expression LTE expression\n                  | expression EQUALS expression\n                  | expression OR expression\n                  | factorfactor : NUMBER\n              | FLOAT\n              | INT\n              | BOOLEAN\n              | CHARCONST\n              | TEXT\n              | NULL\n              | LPAREN expression RPAREN\n              | designatordesignator : IDENTIFIER\n                  | designator DOT IDENTIFIER'
    
_lr_action_items = {'IDENTIFIER':([0,2,3,4,5,8,9,10,11,12,20,22,23,24,25,26,27,28,29,30,34,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,61,62,77,78,80,81,82,84,87,90,91,92,93,94,95,96,97,],[7,7,-5,-6,-7,-10,-11,-12,-13,-14,33,33,33,33,39,-2,-4,40,33,-3,56,33,33,33,33,33,33,33,33,33,33,33,33,33,76,-15,7,33,-9,7,33,33,-17,7,-8,7,-16,7,-18,7,7,7,-19,-21,]),'NUMBER':([0,2,3,4,5,8,9,10,11,12,20,22,23,24,26,27,29,30,43,44,45,46,47,48,49,50,51,52,53,54,55,58,59,61,62,77,78,80,81,82,84,87,90,91,92,93,94,95,96,97,],[13,13,-5,-6,-7,-10,-11,-12,-13,-14,13,13,13,13,-2,-4,13,-3,13,13,13,13,13,13,13,13,13,13,13,13,13,-15,13,13,-9,13,13,13,-17,13,-8,13,-16,13,-18,13,13,13,-19,-21,]),'FLOAT':([0,2,3,4,5,8,9,10,11,12,20,22,23,24,26,27,29,30,43,44,45,46,47,48,49,50,51,52,53,54,55,58,59,61,62,77,78,80,81,82,84,87,90,91,92,93,94,95,96,97,],[14,14,-5,-6,-7,-10,-11,-12,-13,-14,14,14,14,14,-2,-4,14,-3,14,14,14,14,14,14,14,14,14,14,14,14,14,-15,14,14,-9,14,14,14,-17,14,-8,14,-16,14,-18,14,14,14,-19,-21,]),'INT':([0,2,3,4,5,8,9,10,11,12,20,22,23,24,26,27,29,30,43,44,45,46,47,48,49,50,51,52,53,54,55,58,59,61,62,77,78,80,81,82,84,87,90,91,92,93,94,95,96,97,],[15,15,-5,-6,-7,-10,-11,-12,-13,-14,15,15,15,15,-2,-4,15,-3,15,15,15,15,15,15,15,15,15,15,15,15,15,-15,15,15,-9,15,15,15,-17,15,-8,15,-16,15,-18,15,15,15,-19,-21,]),'BOOLEAN':([0,2,3,4,5,8,9,10,11,12,20,22,23,24,26,27,29,30,43,44,45,46,47,48,49,50,51,52,53,54,55,58,59,61,62,77,78,80,81,82,84,87,90,91,92,93,94,95,96,97,],[16,16,-5,-6,-7,-10,-11,-12,-13,-14,16,16,16,16,-2,-4,16,-3,16,16,16,16,16,16,16,16,16,16,16,16,16,-15,16,16,-9,16,16,16,-17,16,-8,16,-16,16,-18,16,16,16,-19,-21,]),'CHARCONST':([0,2,3,4,5,8,9,10,11,12,20,22,23,24,26,27,29,30,43,44,45,46,47,48,49,50,51,52,53,54,55,58,59,61,62,77,78,80,81,82,84,87,90,91,92,93,94,95,96,97,],[17,17,-5,-6,-7,-10,-11,-12,-13,-14,17,17,17,17,-2,-4,17,-3,17,17,17,17,17,17,17,17,17,17,17,17,17,-15,17,17,-9,17,17,17,-17,17,-8,17,-16,17,-18,17,17,17,-19,-21,]),'TEXT':([0,2,3,4,5,8,9,10,11,12,20,22,23,24,26,27,29,30,43,44,45,46,47,48,49,50,51,52,53,54,55,58,59,61,62,77,78,80,81,82,84,87,90,91,92,93,94,95,96,97,],[18,18,-5,-6,-7,-10,-11,-12,-13,-14,18,18,18,18,-2,-4,18,-3,18,18,18,18,18,18,18,18,18,18,18,18,18,-15,18,18,-9,18,18,18,-17,18,-8,18,-16,18,-18,18,18,18,-19,-21,]),'NULL':([0,2,3,4,5,8,9,10,11,12,20,22,23,24,26,27,29,30,43,44,45,46,47,48,49,50,51,52,53,54,55,58,59,61,62,77,78,80,81,82,84,87,90,91,92,93,94,95,96,97,],[19,19,-5,-6,-7,-10,-11,-12,-13,-14,19,19,19,19,-2,-4,19,-3,19,19,19,19,19,19,19,19,19,19,19,19,19,-15,19,19,-9,19,19,19,-17,19,-8,19,-16,19,-18,19,19,19,-19,-21,]),'LPAREN':([0,2,3,4,5,8,9,10,11,12,20,22,23,24,26,27,29,30,43,44,45,46,47,48,49,50,51,52,53,54,55,58,59,61,62,77,78,80,81,82,84,87,90,91,92,93,94,95,96,97,],[20,20,-5,-6,-7,-10,-11,-12,-13,-14,20,20,20,20,-2,-4,20,-3,20,20,20,20,20,20,20,20,20,20,20,20,20,-15,20,20,-9,20,20,20,-17,20,-8,20,-16,20,-18,20,20,20,-19,-21,]),'GET':([0,2,3,4,5,8,9,10,11,12,26,27,30,58,59,62,77,81,82,84,87,90,91,92,93,94,95,96,97,],[22,22,-5,-6,-7,-10,-11,-12,-13,-14,-2,-4,-3,-15,22,-9,22,-17,22,-8,22,-16,22,-18,22,22,22,-19,-21,]),'SHOW':([0,2,3,4,5,8,9,10,11,12,26,27,30,58,59,62,77,81,82,84,87,90,91,92,93,94,95,96,97,],[23,23,-5,-6,-7,-10,-11,-12,-13,-14,-2,-4,-3,-15,23,-9,23,-17,23,-8,23,-16,23,-18,23,23,23,-19,-21,]),'HAVING':([0,2,3,4,5,8,9,10,11,12,26,27,30,58,59,62,77,81,82,84,87,90,91,92,93,94,95,96,97,],[24,24,-5,-6,-7,-10,-11,-12,-13,-14,-2,-4,-3,-15,24,-9,24,-17,24,-8,24,-16,24,-18,24,24,24,-19,-21,]),'FOR':([0,2,3,4,5,8,9,10,11,12,26,27,30,58,59,62,77,81,82,84,87,90,91,92,93,94,95,96,97,],[25,25,-5,-6,-7,-10,-11,-12,-13,-14,-2,-4,-3,-15,25,-9,25,-17,25,-8,25,-16,25,-18,25,25,25,-19,-21,]),'NEWLINE':([0,2,3,4,5,8,9,10,11,12,26,27,30,58,59,62,77,81,82,84,87,89,90,91,92,93,94,95,96,97,],[26,26,-5,-6,-7,-10,-11,-12,-13,30,-2,-4,-3,-15,26,-9,26,-17,26,-8,26,93,-16,26,-18,26,26,26,-19,-21,]),'$end':([1,2,3,4,5,8,9,10,11,12,26,27,30,58,62,81,84,90,92,96,97,],[0,-1,-5,-6,-7,-10,-11,-12,-13,-14,-2,-4,-3,-15,-9,-17,-8,-16,-18,-19,-21,]),'END':([3,4,5,8,9,10,11,12,26,27,30,58,62,77,81,84,87,90,92,94,95,96,97,],[-5,-6,-7,-10,-11,-12,-13,-14,-2,-4,-3,-15,-9,81,-17,-8,92,-16,-18,96,97,-19,-21,]),'EITHER':([3,4,5,8,9,10,11,12,26,27,30,58,62,77,81,84,90,92,96,97,],[-5,-6,-7,-10,-11,-12,-13,-14,-2,-4,-3,-15,-9,82,-17,-8,-16,-18,-19,-21,]),'COLON':([6,7,13,14,15,16,17,18,19,21,33,35,42,56,88,],[28,-45,-36,-37,-38,-39,-40,-41,-42,-44,-45,57,-43,-46,28,]),'EQUALS':([7,13,14,15,16,17,18,19,21,31,32,33,36,38,40,41,42,56,63,64,65,66,67,68,69,70,71,72,73,74,75,79,83,85,88,],[29,-36,-37,-38,-39,-40,-41,-42,-44,54,-35,-45,54,54,61,54,-43,-46,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-35,]),'DOT':([7,21,33,56,],[-45,34,-45,-46,]),'PLUS':([7,13,14,15,16,17,18,19,21,31,32,33,36,38,41,42,56,63,64,65,66,67,68,69,70,71,72,73,74,75,79,83,85,88,],[-45,-36,-37,-38,-39,-40,-41,-42,-44,43,-35,-45,43,43,43,-43,-46,-22,-23,-24,-25,-26,43,43,43,43,43,43,-33,43,43,43,43,-35,]),'MINUS':([7,13,14,15,16,17,18,19,21,31,32,33,36,38,41,42,56,63,64,65,66,67,68,69,70,71,72,73,74,75,79,83,85,88,],[-45,-36,-37,-38,-39,-40,-41,-42,-44,44,-35,-45,44,44,44,-43,-46,-22,-23,-24,-25,-26,44,44,44,44,44,44,-33,44,44,44,44,-35,]),'TIMES':([7,13,14,15,16,17,18,19,21,31,32,33,36,38,41,42,56,63,64,65,66,67,68,69,70,71,72,73,74,75,79,83,85,88,],[-45,-36,-37,-38,-39,-40,-41,-42,-44,45,-35,-45,45,45,45,-43,-46,45,45,-24,-25,-26,45,45,45,45,45,45,-33,45,45,45,45,-35,]),'DIVIDE':([7,13,14,15,16,17,18,19,21,31,32,33,36,38,41,42,56,63,64,65,66,67,68,69,70,71,72,73,74,75,79,83,85,88,],[-45,-36,-37,-38,-39,-40,-41,-42,-44,46,-35,-45,46,46,46,-43,-46,46,46,-24,-25,-26,46,46,46,46,46,46,-33,46,46,46,46,-35,]),'MOD':([7,13,14,15,16,17,18,19,21,31,32,33,36,38,41,42,56,63,64,65,66,67,68,69,70,71,72,73,74,75,79,83,85,88,],[-45,-36,-37,-38,-39,-40,-41,-42,-44,47,-35,-45,47,47,47,-43,-46,47,47,-24,-25,-26,47,47,47,47,47,47,-33,47,47,47,47,-35,]),'EQ':([7,13,14,15,16,17,18,19,21,31,32,33,36,38,41,42,56,63,64,65,66,67,68,69,70,71,72,73,74,75,79,83,85,88,],[-45,-36,-37,-38,-39,-40,-41,-42,-44,48,-35,-45,48,48,48,-43,-46,-22,-23,-24,-25,-26,48,48,48,48,48,48,-33,48,48,48,48,-35,]),'NEQ':([7,13,14,15,16,17,18,19,21,31,32,33,36,38,41,42,56,63,64,65,66,67,68,69,70,71,72,73,74,75,79,83,85,88,],[-45,-36,-37,-38,-39,-40,-41,-42,-44,49,-35,-45,49,49,49,-43,-46,-22,-23,-24,-25,-26,49,49,49,49,49,49,-33,49,49,49,49,-35,]),'GT':([7,13,14,15,16,17,18,19,21,31,32,33,36,38,41,42,56,63,64,65,66,67,68,69,70,71,72,73,74,75,79,83,85,88,],[-45,-36,-37,-38,-39,-40,-41,-42,-44,50,-35,-45,50,50,50,-43,-46,-22,-23,-24,-25,-26,50,50,50,50,50,50,-33,50,50,50,50,-35,]),'GTE':([7,13,14,15,16,17,18,19,21,31,32,33,36,38,41,42,56,63,64,65,66,67,68,69,70,71,72,73,74,75,79,83,85,88,],[-45,-36,-37,-38,-39,-40,-41,-42,-44,51,-35,-45,51,51,51,-43,-46,-22,-23,-24,-25,-26,51,51,51,51,51,51,-33,51,51,51,51,-35,]),'LT':([7,13,14,15,16,17,18,19,21,31,32,33,36,38,41,42,56,63,64,65,66,67,68,69,70,71,72,73,74,75,79,83,85,88,],[-45,-36,-37,-38,-39,-40,-41,-42,-44,52,-35,-45,52,52,52,-43,-46,-22,-23,-24,-25,-26,52,52,52,52,52,52,-33,52,52,52,52,-35,]),'LTE':([7,13,14,15,16,17,18,19,21,31,32,33,36,38,41,42,56,63,64,65,66,67,68,69,70,71,72,73,74,75,79,83,85,88,],[-45,-36,-37,-38,-39,-40,-41,-42,-44,53,-35,-45,53,53,53,-43,-46,-22,-23,-24,-25,-26,53,53,53,53,53,53,-33,53,53,53,53,-35,]),'OR':([7,13,14,15,16,17,18,19,21,31,32,33,36,38,41,42,56,63,64,65,66,67,68,69,70,71,72,73,74,75,79,83,85,88,],[-45,-36,-37,-38,-39,-40,-41,-42,-44,55,-35,-45,55,55,55,-43,-46,-22,-23,-24,-25,-26,55,55,55,55,55,55,-33,55,55,55,55,-35,]),'DO':([7,13,14,15,16,17,18,19,21,32,33,37,38,42,56,63,64,65,66,67,68,69,70,71,72,73,74,75,83,86,88,],[-45,-36,-37,-38,-39,-40,-41,-42,-44,-35,-45,59,-20,-43,-46,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,89,91,-35,]),'RPAREN':([13,14,15,16,17,18,19,21,31,32,33,42,56,63,64,65,66,67,68,69,70,71,72,73,74,75,],[-36,-37,-38,-39,-40,-41,-42,-44,42,-35,-45,-43,-46,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,]),'SEMICOLON':([13,14,15,16,17,18,19,21,32,33,36,41,42,56,63,64,65,66,67,68,69,70,71,72,73,74,75,79,85,],[-36,-37,-38,-39,-40,-41,-42,-44,-35,-45,58,62,-43,-46,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,84,90,]),'IN':([39,],[60,]),'RANGE':([60,],[78,]),'BY':([76,],[80,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'declaration_list':([0,59,82,91,93,],[2,77,87,94,95,]),'declaration':([0,2,59,77,82,87,91,93,94,95,],[3,27,3,27,3,27,3,3,27,27,]),'variable_declaration':([0,2,59,77,82,87,91,93,94,95,],[4,4,4,4,4,4,4,4,4,4,]),'statement':([0,2,59,77,82,87,91,93,94,95,],[5,5,5,5,5,5,5,5,5,5,]),'factor':([0,2,20,22,23,24,29,43,44,45,46,47,48,49,50,51,52,53,54,55,59,61,77,78,80,82,87,91,93,94,95,],[6,6,32,35,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,6,32,6,32,32,88,6,6,6,6,6,]),'read_statement':([0,2,59,77,82,87,91,93,94,95,],[8,8,8,8,8,8,8,8,8,8,]),'print_statement':([0,2,59,77,82,87,91,93,94,95,],[9,9,9,9,9,9,9,9,9,9,]),'if_statement':([0,2,59,77,82,87,91,93,94,95,],[10,10,10,10,10,10,10,10,10,10,]),'for_statement':([0,2,59,77,82,87,91,93,94,95,],[11,11,11,11,11,11,11,11,11,11,]),'newline_statement':([0,2,59,77,82,87,91,93,94,95,],[12,12,12,12,12,12,12,12,12,12,]),'designator':([0,2,20,22,23,24,29,43,44,45,46,47,48,49,50,51,52,53,54,55,59,61,77,78,80,82,87,91,93,94,95,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'expression':([20,23,24,29,43,44,45,46,47,48,49,50,51,52,53,54,55,61,78,80,82,],[31,36,38,41,63,64,65,66,67,68,69,70,71,72,73,74,75,79,83,85,38,]),'condition':([24,82,],[37,86,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> declaration_list','program',1,'p_program','parser.py',20),
  ('newline_statement -> NEWLINE','newline_statement',1,'p_newline_statement','parser.py',24),
  ('newline_statement -> newline_statement NEWLINE','newline_statement',2,'p_newline_statement','parser.py',25),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',33),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',34),
  ('declaration -> variable_declaration','declaration',1,'p_declaration','parser.py',41),
  ('declaration -> statement','declaration',1,'p_declaration','parser.py',42),
  ('variable_declaration -> factor COLON IDENTIFIER EQUALS expression SEMICOLON','variable_declaration',6,'p_variable_declaration','parser.py',46),
  ('variable_declaration -> IDENTIFIER EQUALS expression SEMICOLON','variable_declaration',4,'p_variable_declaration','parser.py',47),
  ('statement -> read_statement','statement',1,'p_statement','parser.py',56),
  ('statement -> print_statement','statement',1,'p_statement','parser.py',57),
  ('statement -> if_statement','statement',1,'p_statement','parser.py',58),
  ('statement -> for_statement','statement',1,'p_statement','parser.py',59),
  ('statement -> newline_statement','statement',1,'p_statement','parser.py',60),
  ('print_statement -> SHOW expression SEMICOLON','print_statement',3,'p_print_statement','parser.py',64),
  ('read_statement -> GET factor COLON IDENTIFIER BY expression SEMICOLON','read_statement',7,'p_read_statement','parser.py',68),
  ('if_statement -> HAVING condition DO declaration_list END','if_statement',5,'p_if_statement','parser.py',84),
  ('if_statement -> HAVING condition DO declaration_list EITHER declaration_list END','if_statement',7,'p_if_statement','parser.py',85),
  ('if_statement -> HAVING condition DO declaration_list EITHER condition DO declaration_list END','if_statement',9,'p_if_statement','parser.py',86),
  ('condition -> expression','condition',1,'p_condition','parser.py',95),
  ('for_statement -> FOR IDENTIFIER IN RANGE expression DO NEWLINE declaration_list END','for_statement',9,'p_for_statement','parser.py',99),
  ('expression -> expression PLUS expression','expression',3,'p_expression','parser.py',103),
  ('expression -> expression MINUS expression','expression',3,'p_expression','parser.py',104),
  ('expression -> expression TIMES expression','expression',3,'p_expression','parser.py',105),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','parser.py',106),
  ('expression -> expression MOD expression','expression',3,'p_expression','parser.py',107),
  ('expression -> expression EQ expression','expression',3,'p_expression','parser.py',108),
  ('expression -> expression NEQ expression','expression',3,'p_expression','parser.py',109),
  ('expression -> expression GT expression','expression',3,'p_expression','parser.py',110),
  ('expression -> expression GTE expression','expression',3,'p_expression','parser.py',111),
  ('expression -> expression LT expression','expression',3,'p_expression','parser.py',112),
  ('expression -> expression LTE expression','expression',3,'p_expression','parser.py',113),
  ('expression -> expression EQUALS expression','expression',3,'p_expression','parser.py',114),
  ('expression -> expression OR expression','expression',3,'p_expression','parser.py',115),
  ('expression -> factor','expression',1,'p_expression','parser.py',116),
  ('factor -> NUMBER','factor',1,'p_factor','parser.py',125),
  ('factor -> FLOAT','factor',1,'p_factor','parser.py',126),
  ('factor -> INT','factor',1,'p_factor','parser.py',127),
  ('factor -> BOOLEAN','factor',1,'p_factor','parser.py',128),
  ('factor -> CHARCONST','factor',1,'p_factor','parser.py',129),
  ('factor -> TEXT','factor',1,'p_factor','parser.py',130),
  ('factor -> NULL','factor',1,'p_factor','parser.py',131),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor','parser.py',132),
  ('factor -> designator','factor',1,'p_factor','parser.py',133),
  ('designator -> IDENTIFIER','designator',1,'p_designator','parser.py',142),
  ('designator -> designator DOT IDENTIFIER','designator',3,'p_designator','parser.py',143),
]
